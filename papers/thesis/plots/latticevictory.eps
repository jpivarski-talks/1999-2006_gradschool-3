%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: _fig1.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 180 471 435 665
%%DocumentFonts: CMMI10 CMMI7 CMR10 CMR7 CMSY10 CMMI5
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips _fig1
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.04.07:1601
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 115 /s put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueID 5087380 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCC67E900
CFE9B1E3FA03479C9040349B7C63E898EB1CE23408A8838811BDB2C848C2243C
82B97233B52DB7285F22FC268C40335020370932120D100C1EF679D50E79D600
C5DCCF78BC574A7777957B18BC8F21A862CB1A08C6C544B97D927FE992BF0389
752C7E9BEAE789DB56177845F6A3C29E8E686AD20FCCDC33EE0FFF846FB837C5
59A22069D539D0538C1096CFFF101AA767E76F66835E4C11CCC0CDC01F9C3722
557FA52850025A1B7D0FDE819AAA49B416F0AA86049EEAA6640C10229EF646B2
EE0C315FCA0C7B37EF434335D70BA7CDF76583B48F0D3F9C049076658BD7EDB7
CECF18F5F2E12F1FAFF1675DCEDCCED18F0A3A790EFA6A89AF01B4B6086F9B96
3D21FC1ECCE8D023429C60EFF70AFD9AD2712ACB7CBB45C26C087217AD6BE8CB
DC9E585EEC98811C12C713A170AF49FE0B6602947DA6514A4809694E97FDA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8B1550654AD5E22C5F3F3CC8C1C0A6C7ADDAB55016A76EC46213FD9BAAF
03F7A5FD261BF647FCA5049118033F809370A84AC3ADA3D5BE032CBB494D7851
A6242E785CCC20D81FC5EE7871F1E588DA3E31BD321C67142C5D76BC6AC708DF
C21616B4CC92F0F8B92BD37A4AB83E066D1245FAD89B480CB0AC192D4CAFA6AD
241BD8DF7AD566A2022FBC67364AB89F33608554113D210FE5D27F8FB1B2B78A
F22EC999DBAAFC9C60017101D5FB2A3B6E2BF4BE47B8E5E4662B8C41AB471DFC
A31EE1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 4 /Xi put
dup 7 /Upsilon put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4CD5C7347D2E
1D0D6630F446F3708FCB29A86819EC8E73AFC0B6FA3658F769CD40D549B79F2B
C12D9BFBA692431B5774F71BA1CCFC36D2EF694641821CDB20776B7B6C4682E1
18306363351F07D7384E24ABE324E0EC54A6D1406643CD037B90033A5BAD6037
4E28123C07B96258DA32D9D24BBB0B912ADD4AB0F819135B07428FEE846C0B35
23C63CC25736F796835ECD3BCCB92298F502BBA355AF404071A77C0FE56B5F20
AAB1E76D9DF9C8D15ED776A3ED25AD971AE4E1C222A8809E32A32B88D4BFB884
29ED6FB36D5F83867631A97CDB6861BF9C3CD303DD6431AA1F5BC1128025EF99
67870DC446C0E347EFD3B0C1162FB636222EE4870727F183BFEBBE082BF89F91
DD987E913E38C7EE9E8ED01FEFEDB4B34AB78C05BCFAB5C03069711B2321CAD4
DEE3ED25D4A2CFCC6B0AE25A54C03C64E8CE0FA5548AD81F9ADB2B687BBE84BD
A15C4C740B427CAD007C47FFE5E89C20AFE2530B26D864A69D945B1B54258322
4DA835911BF2008EA1EDC5221EDA1143B895BB865B0BF8445AD077867F09E66B
19662BD65A282F368C12A611C2B06AE8EA948F4729AFA37161A0673173BEB7BC
D395C2936F1EA0D80DC90514962D204D483E5B20BA0B61894086A03727F9E6F5
4F93EB90A6AAE8C2A3820FC5EB517E1E70147DFB16A95B79C70FB688F3B78FDF
12A3ADC94103FC280EDF0A508627324B80AD29BAC254442E5B27898DB0ED9BE6
EC79E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 7 /Upsilon put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 57 /nine put
dup 61 /equal put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 76 /L put
dup 81 /Q put
dup 112 /p put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BE36BF6F37A1CDFCB
CDFBD90B68E40FBD53695BA7E32EFB13F106A68C80F4738CCD67F7366A59B63E
74FC255BA65882697501001AD2BD197F3C73CEC1C7FB8B5CBE3D295914093090
C526EABC84B18DFB56546CCDBF60C6047783E14D7C1877DCA0CC0EFDC6C7A5B9
732C0BF2947543F6A53639F124E771F823280AC0DC0EEE3BCBABFDADE3EFCF09
5AA187E8B959957A0BE481889125A9F918B0D589B3F75132B24010735A44F675
6D5C26BCF0BBCD7D2CD30B6B92183B89A5F6281F58DD7BBCD7B39756AB4CF8DB
6B774E1ACBF2A59249A4ED17141E8776F8B18AECEDCCD9DAFD1F0008AC7E75F5
4402B816557B3146253A828A7B84D4E372B3B85E00C10EB6B5399326CA325C73
E7D6A82461ABEF2983B43D784D9C57675573A5A408FCCCC97F38EC859BB49446
02BE875C0E8D3B9FE52AAA56E56F82678A4327EB6CA34EB5A6A8B1C6F8D30635
55B54C18AF3C14F2232D3F9C513C09D0CEA6A0B7A96358F58281B63644F77EBD
9FB9CB883E0A0EA92E7F1118BCF0D9F26BDA3B469D678F01BBD601F46245B0AE
F9EBD62D6F6C8571B6512A8DF217954E5EEA59EA0C751107489BB8A3932C81ED
34B43A8A9A44FB27677F03311362FC7E2E104143923BF639CC3241D6FC539FA7
632B76597D6C29B69EC4B9F61137C36F4D3F7798D56F33F5A9689CA8C046502B
A91CA3849A350845815873E77FA7F7282FBD398422F52DD7D4F199BBD874DD44
29267EA777FFD62509810B87C55246B60391D5CFBAB07C9C4AAE6203DBC7E602
75D3E38C7F66058EB798DCAE3CF719981FD9E8EBE567A6010D7D07A8BDB9FF47
D8309085AAD4C782B78A35CE8DBE0A290BAD0885D6FBCC1041A6FCD1E20CAC60
BA728EE459CBFB2869B4C3ED85B466F64C52F017B20CDABB85D24452E0863A7F
C10DA7EB4D60CD093EE4A076C89019FBBB4501D36018A604A0CF33C594D5A5B3
86A2B36900589DDDD4B763300FD44C35250329D5BAA3159E63FB30583AF0D3ED
6390ABE1CBB68FA80D3BE4430E9C9FFF5747D69F8C35184F061DBDEC0C752E86
3F68177E4F68BA76AF8FCCD4AD3E5D9D90235EB33BAED5794A392687873369F6
EB3AD5A1FE45117A0C41ACBC43774A411037D4007F8BB64A98688C5F690E3CCA
BCD7E1C10C4F2227866AB5D4E9F9232C0E3F5C99723B2A09055C6EE9F7EF5A23
394FED833129DFE07E116C19DCC65497D53314AAF731C832B4D6CDF1F7BF5D0B
8E38FE31E05A9FEA233AB43BF3E745A658BF8C39E40C70588349391881063D5F
FC1EB5305A55A86F5FF7D10A9ACA8B573DAC5AB550DDCF4106BF1A33733CE2F7
D845078451CD45648B1E32CE6473878EFF690F8A8BC95EB24C316592B261160D
79BFC1F0969C3867247D9319A49004A8BF9A92F7827BF53439908A4723A63C69
9673FD7C632BA5BEEDC3553E1E735EFA4CEEEA1E71DC9DFC891FD2F1FBA68995
0A03A0804E5425F7C2191A425195EC2C16171350F201CA8DEA34C5D22FAB8A9D
4C3C734C0458E1877FE889791BC591061F6D2CF8A27701FAF7CC9E74B920F7B0
5866D5715C9A5178C87AE105B6CCA6DCBA4B2A655EC2C542B8028F1CC0612C1A
B54A914AC9B6F4E97F77C8B0CB0DD12262D945510727394DD8FC0E5C616E5D3A
958B91C5A9DB06811076843F5BDBE9B8C1B1C6FAA81C3E9A169704EAD508D8B7
29BA3D839B9D1F26F6B42B3AF74AA7FB7DF0B8DC9CB6CF1B0551374AEA0C8592
ACDC11B30C70EB285B45D10652A1ADB3F3BAD76CDE77CE05ABE91EE98473E301
542D2D6F54C117FFCFE8BB4E819AD37570EDAC664CB58A35F3D38139D746C50F
BEDF1586DBA6A02ED7BEE6522F069CECDB665F2857A1A2AB85A9F7090BE78EDE
1F4BD2180B04411337DA1EFAAD0C56917A81B41C0BDB310DA089DD4160C92BA6
1338343C18EBA58141F041B78E5476091959604F883DDC99FF5CC81591EC6BDB
E6EFE38F9CA2186208D58B799D653AE7E6C8567A6F3602EB09B1882E66C47F94
F56C49CC74CC8D05065AE23526CE1BBA14718D058C8B8EFBC68A247EFDA4BEB1
EDDD9CF1BF746D1E5AE92B7E5E96C99D72E3BFFC0DCF6C10F866E7F1AEC811D3
33AA6F42558DC915EA8874D3C4BF5EC5D0A9C4F23E2C291E9EF1858D272F6801
696EF2E0206FEE1974867E524D2EDBAC8E098F3A0DD30C6E80D7FAEA86E4C343
EE633106314ADE2F339C8889F4AC620424890B50174FBC11170AAFB270D2BCBE
4133616602730EBEE3D22733C4BBAC4E0FC7645363A18FD30CF600EB7C770D9A
BF74495E449CA538EBFE2A282E058406CD65C4BE206E60B96B6F26DCC9FD4445
097D2BF873A320F5350BDB77A6E6F23EA87B8AD53493388D94080E427F6088B3
4897145267C40DD8647C5A41C0A09B820FD121A45F428DB35F48FD6D4693EA8D
D3B3A5962F8CDCE54C6EE22EE6EA3B8526A243388E4FB6AC9053332055345542
2E3B695B76DA953E7B7F913DB92D3CF22A17F3C3D025AAC5DA21F3662274B6F2
4C87630FC283E50CB3D2C45E5777ACC310FAB9A139B4743FFAC36C5B6E396977
986E5F1919981D05225DF250434DD6C25C522690F27083D3FAF2D8C15168A356
B7ABF2871767DA8F1E3A6A558F9B29C74AD1EA51FC6D04786FF42744F861CA0A
C832E7E993FD336FC6A84A81CDBB36114E148F4314870FF29086B95805835F8D
C65BAEB6A238ADA5020BBCA257466EF60317B085425B2005EB98F9C61707A72A
B99A4C2F54BAC8F2ED9CB6A4EE06CE996894E610B1566F21EC415F51E77BB26E
56CAFF361AEEE2FD083283D252EF5FD5B9E0CD19D0754F8A99FED0E9FC370355
1C25332EE67D7524635F0DA4B23E7A74A41ACE0F33F0B6DD4788AD29C77BD220
74BD82B4C52E895E2106D523C74A64050FFD7D7E5F949B5A326B276EB9EE7FF6
C489D570CD3BE2A62E5787F6B4204B022F54ABF0A8E9A2EA7B0D2F3F35EEFDB5
6D472180E194443739C8AF5988434C14263733FA1674932A0535B53208DC9924
61288C10FB928EEBF8A04B2D03A3F549F3A18B7AC9F7B2A0C94E87AA889B2278
AF055411B949E762BA9D501DA14D111568D800F6DDC1F83C208BF9C7D79CC676
A59CFD9BCDEF491FEBC8B658333483D03966436B90B4E854182256A514320123
B9F41B1EDFD7E2B22BC515EA93BCFF1F8E9ACE98C25BDADDA9FC3F593B1ADCBD
651107BAF54AA68CAFDC8FA78A7B3E8E4858F299ADAB2FD0888E8B3E7C080A9D
A3AC19CDA6C6C3EBC23790260735069840656B93B80D9B1EA5E4A5BCEEA62B5F
273A827D36C9B07A26F2A02CAA472913806440743551C476A76201EC1FFE323A
9307C7A3289D1669BE3B0D549471E1BECD26521A1A94547F33DD62D6EA3CBE9E
EA041C66D67C9B35D08E4D565638E607A2DE8BB76DE24522C9718D6751C66E59
38E7CC8BCDDB1BE8A936FA8BF0CA2D79BE89EC86F2A6DD27CDD941B1FDF74B84
AE756C7962D0D3E77732B8EF4FBF531DD9789FD10DDE4B137AEEFCA0C1480C97
1868D794B0CF1ABF00B45AFFCAC6EEF0BDE25C758BE6DE8B291674C812ED1280
28B8938B525604F401E958E402D537D61F3D68B19FE85CFC742C5DA27C191306
D157875BE4D67337DE5ED4A4F78411BB9E9235F4AE085BA6C26083120D3CD8DD
3AF1D112977A04430B1DA10AC120D40070E60A88C4BD903D1F7BF8920566850A
C42C2CBE38B17C69A6997702FBE3D03A8BB13A222A522484A3F5F282770A9A79
C11D9FE8EEE9EC310775E6A25E1421EF179647230D2F05824011EC695217B06E
E5FBF6B015BC21B543E2C6831D983B569BCAD42CAB13D3BAC1C681C27B9175DD
0628389154E09731D9B33830E2D598782ED7E976154F34011103BF2CBE60BB13
A2A63FF5E0E512D37EADFDC0D634AF23409DCAC6A4A4E5B41ED2C16DCD597C1B
4FB78E3037DC3DFB59C4468708CD5F119078A7BC58252B8124D61CCA394E7374
113FF45E7D75F9AFC777CB5A65DDDC661C4BF1A11C78793F851D315B46F1994B
7C620AD65DB8D23E1BD9EF8C97C9A94A86682FF2F0F9CC710380A41C503D066D
E6EA994508DC9F85F61C9B2464831B1C57E804BB8B85AE0068AEB1675B046BCF
4D61CDB6B096F2B994D9DF7CB6A5837385F2C0912275F9D4A0BE034AF4C256BB
4D304B6E823AD78142281D180BC716DC43B4CD4D289691183EC2CB7DE15EDA9D
A61A1C35DC9C1568B9C8C96C5507F35DF8E3C21F69778178951D5E66895A6751
3568B436EBB82EF8301B2977F7F9E8CE8ACEB9CE18065D4BBDE7545276F8E16F
A3C24F226BCB07ABEBE4BE20AE3BD64ACF5FF4155980E23A8F581D8067DC96FF
40CBF02503AE9A922E3D9EAF154C5984258607D652EC6D648DD61C6900C95C54
3A97F4E0E0D5ED84FE523781DC67C3BD234AF1941504108B6244DCE05BDAEAF5
0ECF481A0255A5929BE74FDF15D7E13CC2315C2F0F44FA2744A5C2408FE96EDE
89CDCEF2276CFA6E687FEE02729B57C5C7C680840BB08C7E4F7A15C29110F7C3
458F1ED017E629DA0A3C76A43424C453BD845F355D3638A4828E0947C64AF4B8
034DAD710A0EC66CD79C99E94123E7BF45A49173FE7A1836DA1BA8958124A379
8E14FAA8219C07F0F77AF53CD27AE530EE07DA5E647D00958ED8DA31FBFEC915
89C8D8E0845FDD2BB477B77D444455D55012AB7FDD17C0BE2CD435CBE17EF4C3
3340FCED59E0CEA37F29D232AC942A31CA5D80E89088C22F9B1200F1B6E938B1
77CBDF0894372838D54AF6DE5DF8E96F7CD9BFF66CF38764E184F5AB8F325C2E
A90A12DD5BDB6E0B0CAB8299DD45080AF5D10BD114FBB39B88B798A3CA7BC8E4
B4AFE8557A1E6F1E6935D989A531DD1111A274F24FC32CA257EE6290B44AB512
388D6CEE057C393C75413BFBF594CFC80E1BB4E465ABFA2F89FDFA437ACE1D9D
D1645B47C9E8104FF3F252A4C2E2678D0C066EB5B6B85DA6017A37F1A3C8B7DA
997536CB4634656F0625315994998C7F6AAD596AFDA4B1D4E208C22EB4A1B638
2413C0352B19E1D3F28B02D5BCDBC05574981A82A801458B577C86D71095EE7E
94BDC0405AD1BD628EE28A3B6BD679F944C1CBDAEFE1EFB11A06F1F636ECAE6B
2D7B9EDC3CD3ABE8FF61677F602763202114ED0BED534121018E95F8A9C14232
509DCB81F3FD45B9DD0F427680C9875B0AF078950EC3051802CD72E257DC8F4F
C3A9F47C789E76A458A6B377CE25F6124DCC2FF3B411A48D881DB9A1905E885D
A90F17F14ED2BC1ED42B8AFEBA89B6D0013A25E45BFA72686BAD0E959B2A9031
BCCC596EE798373E571FA42C3C8BF41F40199D2A04ECBA74998D12F73397AD6B
EDF9CD89C0EA60B94EF5C0044AF29A06B4707196412D15FD2E686BFD20D74415
A7EDC7072D1D1C1680D947FBD7DA672C0E5FBF90638B54231CED027BA5D2B48D
A372420519A1ECC9F029FC2026B716C9672902C04BF8CFB2B210796E81488340
1CF5C165AE2F7491DC165D64262AFA4EB829356FAEEE8BC89E31C52D5CE9A091
28B21D4B2E1E47C8C163FB0483AD043DDE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 66 /B put
dup 75 /K put
dup 78 /N put
dup 102 /f put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC5CD97BF88176035302FAC972B52AA169D31BFFF6CA2750EE5F16DE7
02182C35D796DC3D825AB8B4A6A4271CC813DA6346AA0549CAD971848D759D03
0446A2DAC25530E5AECF01FE89F2DA47450E33D969457A15EFDAAEAB37EE941B
37713295B98F3C83BDC46366ADE92EEC39FC9601C6ED8A3AA9E5F8EDF452C58F
A38340E9F8489B2CC3FAFA2987E67D4FA64A5692BD67337EF9663922D2A462A8
8C822E0F9BD7FBBC13D965BFF8D8170447D216A6F7494AB5E950DD4EB1BCA9E4
F9FD13BF44E3684D02A3AEFD538A93A70473FD510E374B3505992D05B69E55F3
33B3141F295AA292DE4C36265E4B2135A2245BC2F93166D29DB8579C1D6C51B7
DCE7EA91CB1ECDF1A5CC886691F91E00FED72DE340CF79B6C15AB665DEE69CC7
606BF4EDC9A7AA016A039A95C91811198C538B7960CC1E26294E534937AF3252
31A2BB320B372A60BD401F81CC257DB9C57FFB907C52BF0F0E5D5FB29F47C86A
273EB46C7368FA7F24405B7946CECB729816DCB1EA97A636EB4512FB5B876CEE
27228602E3B2653794723AEFE13E3BE165A790DE930683F80AB1D4F222FE0549
5D236084CE30A0F057ABB2E346E720F4EE59CC11EBCCA3534C7340E8FBC2A36A
7EB139303F0533CD563E8370BF0CEE2A3CD8CE7F2A48396B95F73F796A4FD39C
22CA5890D7FF949AE64341800CEBAF806250B453C57DD7B3D5653116D07DFEFF
9A6F83C4BF31F94A2D757A2873564E523253AD2D3DE392DB69E16CC78B122789
AE7A37EA82ECDEF7121AC2486CD9D6EE2F084CCF4A693D1BC665E9954F320151
9E3AA0F5A5C33C879F63B606A94F859E8C54CDB956F8BCD39693E3E280A3D59E
8E534688706D111C69C37F6615C24049CF97B921E1ECC3C13D75401C7C062B2D
864B290FD83005D4DACB74DFBD51D28C83FCF20414CB6A747625896D29CE82F9
895FF8235766991F636543ECD2C1819000DCAC6C71F29F809D5F68D27D77FE76
BD060872C75363EBD28CDEF8DF9767A7B323375766BD2ADDFA4D4326BE42057D
8217ECACC7C94A0AB7BF89DA6E8D3760B6A1BD32128BDB631FC69BE31CA353F6
338F16684C12087CD2188D896E330CD732A0D62E33EEE48E9CD7BE10ADFDB200
00D126FF39B4F9D1E15D0344A4652B33A0AE888BFEA6079D28026965CD1740EC
29D245468F7D7BB71EA18A4AB3241C4BED0859F4E717850B02A684A966BC373E
28694C9D33CF7770DFE270715C9EA5FC239B8C7A178198F8102BD64BF552459D
45CC175C52D062DD0004C492CE2F9BACFC8725A79596F443F424B5F9B27C52F5
E0EEDEB49571E5FA76A210388B87483A457844B4E8511B3EBDD36D231A73661D
160DA715F5B60B6CFC0546B6DD8FC68BC3FCC50FD0639A62382FA23FE10BB655
C97161877EE3E03A35CD4215632F4680EBFA7BA14F98DBD97093C1BEAF3061DE
85B96D4F7932D42F300F4D666C5B334F0A97A093110E55CBF67118BACF99C05F
8AC0373FE3AF38BC76A4D4541D138C308C5CD3DE39448E922E2CE689403AFCC6
801A76BD139DDDC0CC2514867959D4AE34B57B849D10113AADF006A33C3D6E77
074C2223BF94B7D7755336ACB433A0DF95795081A8F4E6E166BD49CEAC5B19B0
7AB8545E8B60696A5DB853613B66FE9FE422BC4D174EA2E40C10A6D571A1DAB9
7749DBB2E8D3E645E77CF1199A31627F65110772423CA9615556B6D894A7451B
D3A2B9037AC0B9F569E06D68385A859CD46AB35317C81AA071E3F0B4B384389C
1527DF4AC8080F6EC43D8C1368BFAEC12A8AAF209215666F1B2A4C55D49A7D9D
147CA2BC2680BD804B328EB8A7956FCBB67C082FA513780E6F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /psi put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 102 /f put
dup 110 /n put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667C419C4021DA92976C7550A196C257FC2124E6E0339FF8AD5C97E3E0
4809099DA5C5FA4C21719FE55AD35357677FBEC5758DC027A73A3D07E331FEBE
89BE64E0D7331CD8FBB8BD6472687076082E03523B7E6BA2B2A203506757876B
1BD194DEA33C2540ABF416730817335914AB3B599092C4330C69C5044AB6422E
22E4D99A1D2AE97A3AEF2A9121E9DE25973BA198671188F8839F56734A4DE46B
63DD2EE2D6CA697242FC792FA1A4BE35D20D7DF3AF3A4A02F931C289EA7E79AC
8A36FD748A8EA00D8CB2DADE32E3FF68D47BFEBCBFB3EC1247B86F85B3B4A1F7
0CB8FB277F6C817760DDFFEB5C3BA13560E16614F2D972BC7E0E97DB68B45660
BFD0035CF4E5170B4B3C58397FBBE865EC2A251A72472154DEDCDE0B87908D9C
A523933D4BCA1399A6177DA78D8BFE8549321266862A41CF9F070A8245BC791D
17224BCF0B9F39BC72AA73361DE92DDA9701FD539E7623CA93CD244519764E7F
1FDFD576C2422248F1F7B75E087DB8C9B436F0C20712602E6A19F314D8334958
F0733CCB1622DDF2F7D3030A9509FFB5FB3EB56586A6F3D72A18F1E241442D7D
54D56F58022AEC1FCDE6237958C32A15C1F7CC467F97AEFF28C0F6757ADCAD7A
1AFE1A911B0B5AFF26A7983564DBECC227AD0BAEB8C5516B2626D4695BD47B04
E19A0E1717A578C4F15026D203908401600FDEC1DB50DC154E09D3A1240FC170
DEF39F0393A77F7249803D0BCF98984A557FFD0AB40EEDC94BCAED2E8D4F3AEC
467B5CF983F154F5811478C66EC147A2C1D630BF36D4B95B35C071C0384392FA
87E82E9FA99EF363A91339E4D9E10012807C7D4E3C805D36AC0378A484178ACF
B77AD3C8FBDD710F30D2C32163AAE3305D42A19A7568A29741077BD889A7CCF6
595527B19E5C62D904F271AD710AE268160739D5B9EAAA5A445CEB4C1F2C7BCB
51BB41DC123F638F50B60FC9430BCF79C64C278A541E8CC091444B2CCCCD6FE7
30F279B814B0F1ADE80B8FDCDB6AA1101D4D9FC9C158715EC97B77E8430B197D
203AEA657AB50C5C14F41B09C15FBF2041B584F067321C5289C60DC42404F998
D2E282E9DF2740A3896D5D3C87AA6E2B028F94AD6CF6DE514826CE54EC16F0D5
B8AAE8D4F1E2C3DAE7398A2B45478E801643329D95C9F203F3E15278894BF53B
B6EE52407A10BEA5251E23DB5A87CC0598A52DA4DF31C84D960DD445B1A2358B
EBBACBED84F6FF5D6562DF9ECEC8A041266F26F05702AEE6D88637E3D1F2532D
93478966BF2531ECDACF2B63F19D8F5E92253D2BF22BD36725175B37BFD68235
56FA9E1B9EDA39D9CC82FF19CEC10AB9FEA5D6DDE6CC8A906A257CC13A0CC35F
C6AC1FA0F83F55BE381026557965F430509F0335C2A5F5634D41476B040A952F
344DC295FA9188230ADF50D11098C8B3E401A40D32E00A6253B51E52A45A2486
456216A82B40523955F1C66E34011BFEBBC8BED1D2DBDDD5F95A96FC26006327
F5AAD47238817CB4C6F008AAB1346B9A1649BA223811FF43CF9E708AE86BECB2
DBB616C064C87FD131EDA728C280E64A6D891934E1DAC071AF4ECC5B15BE7D5F
6A4F071C7FFE66ABF2FF9D5F93F49EB3C419F311EF61CCBCE20DE15EF07500FE
52787E9157CCCF823FC5D16B1CBAE813C3AB229857D8C6F6098E92E2510369ED
B2728532D993DC1CC21317C645A709C611AD082169716FBABCB00B13BA592BBC
76D7E0FD2CEC142EFA3CB8A85FB93A7D1F3833A172EF2BDC6F8011940B438CFC
1C941FAF8093555BFB2359C0093748FC90C90B8F772A0F25A351EEFE2AD1928E
C537B6B9849B3C4AD2A966D8D9454F376131EA86E30164CE30465ED7BBF78BCD
84A1E863631A8C247D48E760D3B756AB8EB1A2375755EE3F5BE5F66D23D34CAC
5089083FC07ADD3B63E712505DF71971EA357D317BB9D67FC5952AADD6F0A692
7B03EFE10F6A4D3AD01A7FBD0C468297E01D34DC4809657CB8C4A88A14FFD74A
2E1F94F462AC03519A1BC2DEB4E01C495DF023423990206365D04B42F1541BE7
F64AFBED394D29E73A8DB3667B746E3200120FF146760BFF73179A699EFF9BCD
CDDC996D0421E4AFE1A62DF3558D8689C24D755B0B55E6C9610D62ED4DE9717F
CADC01692C6A6718EF2B3C485DF14FF5524B826F1CABAACF06119D1D8FCF4C72
FA782194432376EE93B4B57C4A9AAC3033918A3DDBD2C95538ED19CB1A6C8D64
3179C38DB146D3B2180419AAEBD8D77370652F202FCE5D82F8FDEB108FAE317C
D449618479D09733AE80C1B0A3EF54C75FBBA20966719AA30C1916F27B277D97
38AE714087D0758086C12434AC40304AE87548B91DA79D6C58F1154018D73AAF
5DC12CCEAE4898BC6AB44B2B999C5BE63A6DB7671682F659ED0A3DF193C0623A
9864D6305E3C4A83D81E141BB817927731CDA6CB0B240EBF3CAB57289DD3F59C
8919F298733ADD1E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (_fig1.dvi)
@start /Fa 140[28 115[{}1 41.511 /CMMI5 rf /Fb 255[65{}1
83.022 /CMSY10 rf /Fc 248[51 2[44 4[{}2 58.1154 /CMR7
rf /Fd 135[44 3[32 3[46 30[65 4[52 6[57 63 60 5[65 3[42
5[42 42 42 42 42 23 4[32 32 23 31[65 7[{}20 83.022 /CMR10
rf /Fe 153[32 23[53 2[56 8[50 40[39 25[{}5 58.1154 /CMMI7
rf /Ff 145[50 7[41 18[51 2[53 2[81 8[69 35[54 32[{}7
83.022 /CMMI10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 902 2060 a @beginspecial @setspecial
 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10.0 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_
def /vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /N {newpath moveto} bind def /f {rlineto
fill} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow { currentpoint
stroke M   0 vshift R show } def /Rshow { currentpoint stroke M   dup
stringwidth pop neg vshift R show } def /Cshow { currentpoint stroke
M   dup stringwidth pop -2 div vshift R show } def /UP { dup vpt_ mul
/vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def /vpt2 vpt
2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if 0 setdash
}  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def /BL { stroke
userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth 2
div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth exch
def       dup 1 lt {pop 1} if 10 mul /udl exch def } def /PL { stroke
userlinewidth setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa {
AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL
[] 1 0 0 DL } def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2
dl 3 dl] 0 0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4
{ PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl
3 dl] 1 1 0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt
{ stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore
} def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg
V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt }
def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke
M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash
2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def /Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont dup
length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall currentdict
end definefont pop end gnudict begin gsave 0 0 translate 0.100 0.100
scale 0 setgray newpath 1.000 UL LTb 345 300 M 0 63 V 0 1481 R 0 -63
V 540 300 M 0 63 V 0 1481 R 0 -63 V 735 300 M 0 63 V 0 1481 R 0 -63
V 1.000 UL LTb 150 300 M 780 0 V 0 1544 V -780 0 V 150 300 L 1.000
UP 1.000 UL LT1 540 300 M 0 1544 V 0.500 UP 1.000 UL LT0 275 454 M
47 0 V 694 609 M 82 0 V 522 763 M 90 0 V 341 918 M 203 0 V 442 1072
M 71 0 V 25 154 R 105 0 V -54 155 R 66 0 V 554 1535 M 101 0 V 76 155
R 140 0 V 298 454 CircleF 735 609 CircleF 567 763 CircleF 442 918 CircleF
478 1072 CircleF 591 1226 CircleF 622 1381 CircleF 604 1535 CircleF
801 1690 CircleF 275 454 M 47 0 V 694 609 M 82 0 V 522 763 M 90 0 V
341 918 M 203 0 V 442 1072 M 71 0 V 25 154 R 105 0 V -54 155 R 66 0
V 554 1535 M 101 0 V 76 155 R 140 0 V 298 454 CircleF 735 609 CircleF
567 763 CircleF 442 918 CircleF 478 1072 CircleF 591 1226 CircleF 622
1381 CircleF 604 1535 CircleF 801 1690 CircleF 1.000 UP stroke grestore
end showpage


@endspecial 1726 672 a Ff(f)1767 684 y Fe(\031)1726
802 y Ff(f)1767 814 y Fe(K)1726 931 y Fd(3)p Ff(M)1849
943 y Fc(\004)1914 931 y Fb(\000)18 b Ff(M)2078 943 y
Fe(N)1726 1056 y Fd(2)p Ff(M)1849 1068 y Fe(B)1899 1076
y Fa(s)1953 1056 y Fb(\000)g Ff(M)2117 1068 y Fc(\007)1726
1187 y Ff( )s Fd(\(1)p Ff(P)30 b Fb(\000)18 b Fd(1)p
Ff(S)5 b Fd(\))1726 1316 y(\007\(1)p Ff(D)20 b Fb(\000)e
Fd(1)p Ff(S)5 b Fd(\))1726 1445 y(\007\(2)p Ff(P)29 b
Fb(\000)18 b Fd(1)p Ff(S)5 b Fd(\))1726 1573 y(\007\(3)p
Ff(S)22 b Fb(\000)c Fd(1)p Ff(S)5 b Fd(\))1726 1702 y(\007\(1)p
Ff(P)29 b Fb(\000)18 b Fd(1)p Ff(S)5 b Fd(\))941 2038
y(LQCD/Exp't)27 b(\()p Ff(n)1534 2050 y Fe(f)1600 2038
y Fd(=)c(0\))1475 1920 y(1.1)-237 b(1)g(0.9)2092 2060
y @beginspecial @setspecial
 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10.0 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_
def /vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /N {newpath moveto} bind def /f {rlineto
fill} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow { currentpoint
stroke M   0 vshift R show } def /Rshow { currentpoint stroke M   dup
stringwidth pop neg vshift R show } def /Cshow { currentpoint stroke
M   dup stringwidth pop -2 div vshift R show } def /UP { dup vpt_ mul
/vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def /vpt2 vpt
2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if 0 setdash
}  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def /BL { stroke
userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth 2
div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth exch
def       dup 1 lt {pop 1} if 10 mul /udl exch def } def /PL { stroke
userlinewidth setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa {
AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL
[] 1 0 0 DL } def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2
dl 3 dl] 0 0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4
{ PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl
3 dl] 1 1 0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt
{ stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore
} def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg
V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt }
def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke
M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash
2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def /Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont dup
length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall currentdict
end definefont pop end gnudict begin gsave 0 0 translate 0.100 0.100
scale 0 setgray newpath 1.000 UL LTb 345 300 M 0 63 V 0 1481 R 0 -63
V 540 300 M 0 63 V 0 1481 R 0 -63 V 735 300 M 0 63 V 0 1481 R 0 -63
V 1.000 UL LTb 150 300 M 780 0 V 0 1544 V -780 0 V 150 300 L 1.000
UP 1.000 UL LT1 540 300 M 0 1544 V 1.000 UL LT1 540 300 M 0 1544 V
0.500 UP 1.000 UL LT0 509 454 M 74 0 V 552 609 M 121 0 V 505 763 M
117 0 V 505 918 M 94 0 V 489 1072 M 117 0 V -76 154 R 113 0 V 517 1381
M 89 0 V 480 1535 M 85 0 V -48 155 R 105 0 V 546 454 CircleF 612 609
CircleF 563 763 CircleF 552 918 CircleF 548 1072 CircleF 587 1226 CircleF
561 1381 CircleF 522 1535 CircleF 569 1690 CircleF 509 454 M 74 0 V
552 609 M 121 0 V 505 763 M 117 0 V 505 918 M 94 0 V 489 1072 M 117
0 V -76 154 R 113 0 V 517 1381 M 89 0 V 480 1535 M 85 0 V -48 155 R
105 0 V 546 454 CircleF 612 609 CircleF 563 763 CircleF 552 918 CircleF
548 1072 CircleF 587 1226 CircleF 561 1381 CircleF 522 1535 CircleF
569 1690 CircleF 1.000 UP stroke grestore end showpage
 
@endspecial 2132 2038 a(LQCD/Exp't)27
b(\()p Ff(n)2725 2050 y Fe(f)2791 2038 y Fd(=)c(3\))2665
1920 y(1.1)-237 b(1)g(0.9)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
