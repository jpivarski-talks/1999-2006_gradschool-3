#=============================================================================
#
# Purpose: Build a user library with name <name>
#
# How to use:
#
#   1.) Copy this file to your build area. (Please don't build code in your
#       source area!)
#
#   2.) This makefile includes "M.tail", which contains all the "meat".
#       (suffix rules, platform dependencies etc.)
#
#   3.) Dependencies (ala makedepend) are done via a ".depend" file 
#       which gets created and include by "M.tail".
#
#   4.) Make sure the environment variable USER_SRC is set to the
#       directory *above* the source code:
#         e.g. "setenv USER_SRC /home/mkl/work/cleo3/cvssrc"
#
#   5.) To compile the library, do"
#         unix> gmake CXX=<compiler>
#         e.g. "gmake CXX=cxx"
#
#   6.) The library will appear by default as "../lib/lib<directory>.a", 
#
#   7.) To compile and link in debug mode, use "DEBUG=y":
#          e.g. "gmake CXX=cxx DEBUG=y"
#        This will result in an appended "_g" to the library name.
#
#   8.) You can OVERRIDE any symbol used in a makefile by specifying the new
#       symbol on the command line, for example, 
#          e.g. "gmake USER_OBJS=myfunc.o"
#       Please remember that this will OVERRIDE any value specified in the 
#       Makefile. If you just which to add extra information to the current
#       makefile value the 'XTRA_????' symbols have been created. Look through
#       this file to see which symbols add to the makefile symbols. 
#
#=============================================================================
SHELL := /bin/sh
USER_LINK := CXX
# also create shared library when making library
MAKE_SHAREDLIB := y
#
#----------------------------
# name of job and executable
#----------------------------

ifeq "$(JOB)" ""
  WHERE := $(shell pawd)
  JOB := $(notdir $(WHERE))
endif

#----------------------------------------
# List of subdirectories containing code
#----------------------------------------

DIR_LIST := 	Class \
		Instantiate \
		$(XTRA_DIR)

#-------------------------------------------------------
# list of include directories:
#   $USER_SRC/include is implicitly included!
#   USER_INCS should be defined with respect to USER_SRC
#   CLEO3_INCS should be defined with respect to C3_INC 
#   CLEO_INCS should be defined with respect to C_CVSSRC
#   CERN_INCS should be defined with respect to CERNSRC
#   COMM_INCS should be defined with respect to COMM_INC
#   OTHR_INCS should be fully specified!
# Only uncommented settings are used!
#-------------------------------------------------------

USER_INCS :=	$(XTRA_INCS) .
CLEO3_INCS:=	.
#CLEO_INCS := 	. 
#CERN_INCS :=	.
COMM_INCS =	$(CONSTANTS_INCS)
#OTHR_INCS :=	$(C3_OTHER)

#--------------------------------------------------------------
# extra compiler flags
#--------------------------------------------------------------

USER_FFLAGS   := $(XTRA_FFLAGS)
USER_CFLAGS   := $(XTRA_CFLAGS)
USER_CXXFLAGS := $(XTRA_CXXFLAGS)

#---------------------------------------------
# #define for cpp, define SELECT symbols here
#---------------------------------------------

USER_DEFS :=	$(XTRA_DEFS)

#--------------------------------------------------------------
# invoke standard tail to Makefile to execute compile and link
#--------------------------------------------------------------

AUTOGEN := y
include $(C3_GMAKE)/M.tail

# This next line looks redundant, but it isn't. The AUTOGEN
# assignment may have been overridden on the command line.

SCRIPTS_DIR := Scripts

# allows you to remove all the autogenerated code
rmgen :
	-rm -f $(USER_SRC)/$(JOB)/Instantiate/*

# Need to run code generators before checking for dependencies, that
# way the newly created code will be checked for dependencies

UPDATE_FILE = $(USER_SRC)/$(JOB)/Instantiate/update

gen : $(UPDATE_FILE)

#generate the code used to instantiate the constant's templates
$(UPDATE_FILE): \
	    $(USER_SRC)/$(JOB)/constants.map \
	    $(USER_SRC)/$(JOB)/$(SCRIPTS_DIR)/T_constname.cc.skel \
	    $(USER_SRC)/$(JOB)/$(SCRIPTS_DIR)/gen_bdl_instantiations.tcl
	$(USER_SRC)/$(JOB)/$(SCRIPTS_DIR)/gen_bdl_instantiations.tcl \
	    $(USER_SRC)/$(JOB) $(USER_SRC)/$(JOB)/constants.map  
	echo "Last time updated: " > $@ 
	date >>$@

# $Id: Makefile,v 1.3 2002/05/24 19:08:47 gregor Exp $
#
# DO NOT DELETE
