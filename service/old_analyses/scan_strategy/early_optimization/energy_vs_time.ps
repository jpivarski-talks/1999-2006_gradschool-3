%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: energy_vs_time.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Courier
%%EndComments
%DVIPSCommandLine: dvips -o energy_vs_time.ps energy_vs_time.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.12.12:1355
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (energy_vs_time.dvi)
@start
%DVIPSBitmapFont: Fa cmbx12 17.28 20
/Fa 20 122 df<BD12FCA488A2D8000102C0C71201F1000F1A01F2007F1B3F1B0F1B0775
7EA28787A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA31801A218031807181F
18FF93B6FCA6EEC000181F180718031801A21800A21D7E197EA21DFCA696C812011DF8A3
1C03A3F407F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13C098B5FC1A0797B6FC
BEFCA31D80A35F617AE06A>69 D<BD12E0A41CF0A2D8000102C0C71207F1003F1A0F1A03
1A001B7F1B3FF31FF81B0FA21B07A21B03A21B011CFCA31B00A419FCA21C7EA41C00A218
01A31803A21807180F183FEF01FF93B6FCA6EEC001EF003F180F18071803A21801A31800
A896C9FCB3A5B912F8A657617AE065>I<DBFFFCEC01E0020FD9FFE01303027F02FC1307
49B7130F0107EEC01F011F16F049D9C007EBF83F4948C7383FFE7FD9FFF8020FB5FC4801
E014014849804849153F91C97E484882001F834982003F83845B007F187FA2193FA200FF
181FA27F190FA27FA26D17078080806C01F893C7FC80ECFF8015F86CECFFC016FC6CEDFF
E017FE6CEEFFE018F86C17FE6C717E6C846C846D17F86D836D836D8313036D18806D6C17
C0020F17E01401DA000F16F01500040715F8EE007F1703050014FC183F84060713FE84A2
007C8300FC83A2197FA3193F7EA31AFC7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01
FF18C06E4B138002E04B130002F84B5A02FFED3FFC01CF01E0ECFFF8018301FF010F5B01
0191B65A6D6C5E48011F93C7FC48010315FC48D9003F14E048020149C8FC476677E35A>
83 D<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A0349864986
A2491B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3B3
B3A3021FBAFCA663617AE070>I<913803FFFE027FEBFFF00103B612FE010F6F7E4916E0
90273FFE001F7FD97FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA2717FA3
6C496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14C001
3FEBFE004913F048B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E
806C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC015800001
91B5487E6C6C4B7E011F02FC130F010302F001011400D9001F90CBFC49437CC14E>97
D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80047F14F00381B612FC038715FF
038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B02007F03F8824B6F7E4B6F1380
4B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFCA44F13F8A31BF0A24F13E0A24F
13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C495B9126F83FE0013F13C09127
F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7001F91C8FC90C8000313E04F65
7BE35A>I<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF4901F801
0113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A5C5A7113
E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C18FCA26C
6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F806D6DECFF
00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FCC7FCDA00
0F13C03E437BC148>I<92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE
037F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A80
4884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A2
7EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01
E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715
E0020092C8FC030713F041437CC14A>101 D<EE3FFC0307B51280033F14C04AB612F002
0715F84A9038F03FFC4AEB807F913A7FFE00FFFE4A5A4B4813FF4913F05B4913E0A24913
C0A27013FE4949EB7FFCEF3FF8EF1FF0EF07C094C7FCB0B812C0A6D8001F01C0C8FCB3B3
B0007FB612FCA638657CE431>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDAFE03
148049B7128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC0349486E6C
7E4948EC3FFF48496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60A36C
6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C060D9
7C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE6CEF
FFC019F06D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890C900
0F7F484816014848EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D177F6C
6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F90B7
12F8010717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>I<EB0FE0EB3FF849
7E48B5FCA24880A24880A76C5CA26C91C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF
80007FB5FCA6C6FC7F7FB3B3AEB712C0A622657BE42C>105 D<903807FF80B6FCA6C6FC
7F7FB3B3B3B3ADB712E0A623647BE32C>108 D<902607FF80D91FFFEEFFF8B691B500F0
0207EBFF80040702FC023F14E0041F02FF91B612F84C6F488193267FE07F6D4801037F92
2781FE001F9027E00FF0007FC6DA83F86D9026F01FC06D7F6DD987F06D4A487F6DD98FC0
DBF87EC7804C6D027C80039FC76E488203BEEEFDF003BC6E4A8003FC04FF834B5FA24B5F
A24B94C8FCA44B5EB3B2B7D8F007B7D8803FB612FCA67E417BC087>I<902607FF80EB1F
FFB691B512F0040714FC041F14FF4C8193267FE07F7F922781FE001F7FC6DA83F86D7F6D
D987F07F6DD98FC0814C7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007
B71280A651417BC05A>I<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C
6C7E010701F0010F13E04901C001037F49496D7F4990C87F49486F7E49486F7E48496F13
804819C04A814819E048496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FE
A46C6D4B13FCA36C19F8A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B1300
6D6C4B5A6D6D495B6D6D495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC
020715E0020092C8FC030713E048437CC151>I<D90FFFEB0FFCB690383FFF8093B512E0
4B14F04B14F8923907FC7FFC92390FE0FFFEC6EC1F806DD93F0113FF6D133E157E157C15
F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B90C7FCA55DB3B0B712F8A638417BC042>
114 D<913A3FFF8007800107B5EAF81F011FECFE7F017F91B5FC48B8FC48EBE0014890C7
121FD80FFC1407D81FF0801600485A007F167F49153FA212FF171FA27F7F7F6D92C7FC13
FF14E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C826C826C826C82013F1680010F
16C01303D9007F15E0020315F0EC001F1500041F13F81607007C150100FC81177F6C163F
A2171F7EA26D16F0A27F173F6D16E06D157F6D16C001FEEDFF806D0203130002C0EB0FFE
02FCEB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC48010F13E035437BC140>I<
EC07E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8
FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16006F5B6D6D137E6D6D5B
6DEBFF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C7DDA3F>I<902607FFC0
ED3FFEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F60183E6D6D147E4E7F6D
6D4948806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E1500021F5C020314F8DA003F01
8002F0C7FC51427BC05A>I<B700C00103B512FCA6D8003F01C0C8381FFE006FED07F0A2
6D6D5E190F6D6D5E191F6D6D5E193F6D95C7FC6F5D6D177E6F15FEA26D6E495AA26E6D5C
18036E6D5C18076E5E70130F6E5E70131FA26E6D495AA26E6D91C8FC606E6D137E18FE6E
5D17816F5C17C3A26FEBE7F0A26FEBF7E017FF6F5CA26F5CA26F91C9FCA36F5BA26F5BA2
705AA2705AA2705AA35FA25F163F94CAFC5E167E16FED807E05CD81FF81301487E486C49
5AA2B5495AA24B5A5E151F4B5A6C4849CBFC15FEEBFC01393FF807FC391FF03FF06CB55A
6C5C6C91CCFCC613FCEB1FE04E5D7DBF55>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 565 548 a Fa(Energy)53 b(Stabilit)l(y)i(as)f(a)g(F)-13
b(unction)53 b(of)h(Time)324 2751 y @beginspecial 57
@llx 3 @lly 560 @urx 314 @ury 3885 @rwi @setspecial
%%BeginDocument: energy_vs_time.tex_gr1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 57 3 560 314
%%HiResBoundingBox: 57.1875 3.1875 559.562 313.687
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, December 12, 2001) (13:55:14)
%%Title: Clipboard
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 316.875 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
57.187500 313.687500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		502.375000 def
/Mheight	310.500000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-243 0.002 -106.302 20.6011 [
[.2 -0.0125 -18 -9 ]
[.2 -0.0125 18 0 ]
[.4 -0.0125 -18 -9 ]
[.4 -0.0125 18 0 ]
[.6 -0.0125 -18 -9 ]
[.6 -0.0125 18 0 ]
[.8 -0.0125 -18 -9 ]
[.8 -0.0125 18 0 ]
[1 -0.0125 -18 -9 ]
[1 -0.0125 18 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -32 -18.8125 ]
[.5 -0.0125 32 -9 ]
[-0.0125 .10301 -30 -4.5 ]
[-0.0125 .10301 0 4.5 ]
[-0.0125 .20601 -24 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .30902 -30 -4.5 ]
[-0.0125 .30902 0 4.5 ]
[-0.0125 .41202 -24 -4.5 ]
[-0.0125 .41202 0 4.5 ]
[-0.0125 .51503 -30 -4.5 ]
[-0.0125 .51503 0 4.5 ]
[-0.0125 .61803 -24 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -40.125 -56 ]
[-0.01875 .30902 -30 56 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2 0 m
.2 .00625 L
s
[(121600)] .2 -0.0125 0 1 Mshowa
.4 0 m
.4 .00625 L
s
[(121700)] .4 -0.0125 0 1 Mshowa
.6 0 m
.6 .00625 L
s
[(121800)] .6 -0.0125 0 1 Mshowa
.8 0 m
.8 .00625 L
s
[(121900)] .8 -0.0125 0 1 Mshowa
1 0 m
1 .00625 L
s
[(122000)] 1 -0.0125 0 1 Mshowa
.125 Mabswid
.04 0 m
.04 .00375 L
s
.08 0 m
.08 .00375 L
s
.12 0 m
.12 .00375 L
s
.16 0 m
.16 .00375 L
s
.24 0 m
.24 .00375 L
s
.28 0 m
.28 .00375 L
s
.32 0 m
.32 .00375 L
s
.36 0 m
.36 .00375 L
s
.44 0 m
.44 .00375 L
s
.48 0 m
.48 .00375 L
s
.52 0 m
.52 .00375 L
s
.56 0 m
.56 .00375 L
s
.64 0 m
.64 .00375 L
s
.68 0 m
.68 .00375 L
s
.72 0 m
.72 .00375 L
s
.76 0 m
.76 .00375 L
s
.84 0 m
.84 .00375 L
s
.88 0 m
.88 .00375 L
s
.92 0 m
.92 .00375 L
s
.96 0 m
.96 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
.5 -0.0125 -93 -22.8125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Run) show
87.000 11.250 moveto
(Number) show
123.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .10301 m
.00625 .10301 L
s
[(5.165)] -0.0125 .10301 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(5.17)] -0.0125 .20601 1 0 Mshowa
0 .30902 m
.00625 .30902 L
s
[(5.175)] -0.0125 .30902 1 0 Mshowa
0 .41202 m
.00625 .41202 L
s
[(5.18)] -0.0125 .41202 1 0 Mshowa
0 .51503 m
.00625 .51503 L
s
[(5.185)] -0.0125 .51503 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(5.19)] -0.0125 .61803 1 0 Mshowa
.125 Mabswid
0 .0206 m
.00375 .0206 L
s
0 .0412 m
.00375 .0412 L
s
0 .0618 m
.00375 .0618 L
s
0 .0824 m
.00375 .0824 L
s
0 .12361 m
.00375 .12361 L
s
0 .14421 m
.00375 .14421 L
s
0 .16481 m
.00375 .16481 L
s
0 .18541 m
.00375 .18541 L
s
0 .22661 m
.00375 .22661 L
s
0 .24721 m
.00375 .24721 L
s
0 .26781 m
.00375 .26781 L
s
0 .28842 m
.00375 .28842 L
s
0 .32962 m
.00375 .32962 L
s
0 .35022 m
.00375 .35022 L
s
0 .37082 m
.00375 .37082 L
s
0 .39142 m
.00375 .39142 L
s
0 .43262 m
.00375 .43262 L
s
0 .45322 m
.00375 .45322 L
s
0 .47383 m
.00375 .47383 L
s
0 .49443 m
.00375 .49443 L
s
0 .53563 m
.00375 .53563 L
s
0 .55623 m
.00375 .55623 L
s
0 .57683 m
.00375 .57683 L
s
0 .59743 m
.00375 .59743 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -152.062 -9.0625 Mabsadd m
1 1 Mabs scale
currentpoint translate
117 9.0625 translate
90 rotate
-117 -9.0625 translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.563 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.563 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Beam) show
93.000 11.563 moveto
(Energy) show
135.000 11.563 moveto
(in) show
153.000 11.563 moveto
(GeV) show
171.000 11.563 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .61178 m
0 .61803 L
s
.2 .61178 m
.2 .61803 L
s
.4 .61178 m
.4 .61803 L
s
.6 .61178 m
.6 .61803 L
s
.8 .61178 m
.8 .61803 L
s
.125 Mabswid
.04 .61428 m
.04 .61803 L
s
.08 .61428 m
.08 .61803 L
s
.12 .61428 m
.12 .61803 L
s
.16 .61428 m
.16 .61803 L
s
.24 .61428 m
.24 .61803 L
s
.28 .61428 m
.28 .61803 L
s
.32 .61428 m
.32 .61803 L
s
.36 .61428 m
.36 .61803 L
s
.44 .61428 m
.44 .61803 L
s
.48 .61428 m
.48 .61803 L
s
.52 .61428 m
.52 .61803 L
s
.56 .61428 m
.56 .61803 L
s
.64 .61428 m
.64 .61803 L
s
.68 .61428 m
.68 .61803 L
s
.72 .61428 m
.72 .61803 L
s
.76 .61428 m
.76 .61803 L
s
.84 .61428 m
.84 .61803 L
s
.88 .61428 m
.88 .61803 L
s
.92 .61428 m
.92 .61803 L
s
.96 .61428 m
.96 .61803 L
s
.25 Mabswid
0 .61803 m
1 .61803 L
s
.99375 0 m
1 0 L
s
.99375 .10301 m
1 .10301 L
s
.99375 .20601 m
1 .20601 L
s
.99375 .30902 m
1 .30902 L
s
.99375 .41202 m
1 .41202 L
s
.99375 .51503 m
1 .51503 L
s
.125 Mabswid
.99625 .0206 m
1 .0206 L
s
.99625 .0412 m
1 .0412 L
s
.99625 .0618 m
1 .0618 L
s
.99625 .0824 m
1 .0824 L
s
.99625 .12361 m
1 .12361 L
s
.99625 .14421 m
1 .14421 L
s
.99625 .16481 m
1 .16481 L
s
.99625 .18541 m
1 .18541 L
s
.99625 .22661 m
1 .22661 L
s
.99625 .24721 m
1 .24721 L
s
.99625 .26781 m
1 .26781 L
s
.99625 .28842 m
1 .28842 L
s
.99625 .32962 m
1 .32962 L
s
.99625 .35022 m
1 .35022 L
s
.99625 .37082 m
1 .37082 L
s
.99625 .39142 m
1 .39142 L
s
.99625 .43262 m
1 .43262 L
s
.99625 .45322 m
1 .45322 L
s
.99625 .47383 m
1 .47383 L
s
.99625 .49443 m
1 .49443 L
s
.99625 .53563 m
1 .53563 L
s
.99625 .55623 m
1 .55623 L
s
.99625 .57683 m
1 .57683 L
s
.99625 .59743 m
1 .59743 L
s
.25 Mabswid
1 0 m
1 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
0 .39968 m
.04057 .39968 L
.08481 .39968 L
.12636 .39968 L
.16632 .39968 L
.20885 .39968 L
.2498 .39968 L
.29331 .39968 L
.33524 .39968 L
.37557 .39968 L
.41848 .39968 L
.4598 .39968 L
.49953 .39968 L
.54183 .39968 L
.58254 .39968 L
.62583 .39968 L
.66752 .39968 L
.70762 .39968 L
.7503 .39968 L
.79139 .39968 L
.83505 .39968 L
.87712 .39968 L
.9176 .39968 L
.96065 .39968 L
1 .39968 L
s
.008 w
.068 .4044 Mdot
.07 .40378 Mdot
.072 .40378 Mdot
.078 .40255 Mdot
.08 .40378 Mdot
.084 .40378 Mdot
.086 .40316 Mdot
.088 .40296 Mdot
.09 .40296 Mdot
.094 .40275 Mdot
.096 .40275 Mdot
.098 .40275 Mdot
.102 .40234 Mdot
.104 .40255 Mdot
.106 .40193 Mdot
.108 .40193 Mdot
.11 .40213 Mdot
.112 .40275 Mdot
.114 .40213 Mdot
.116 .40275 Mdot
.118 .40358 Mdot
.122 .40358 Mdot
.126 .40419 Mdot
.128 .40419 Mdot
.13 .40481 Mdot
.136 .4044 Mdot
.138 .40378 Mdot
.148 .4044 Mdot
.152 .1063 Mdot
.158 .10651 Mdot
.16 .10651 Mdot
.162 .10671 Mdot
.17 .10713 Mdot
.176 .10836 Mdot
.18 .10939 Mdot
.184 .1098 Mdot
.186 .10919 Mdot
.19 .10939 Mdot
.21 .10919 Mdot
.216 .10857 Mdot
.218 .10939 Mdot
.248 .10919 Mdot
.252 .40172 Mdot
.256 .40255 Mdot
.26 .40337 Mdot
.262 .40337 Mdot
.266 .40255 Mdot
.272 .40461 Mdot
.274 .40419 Mdot
.276 .40419 Mdot
.28 .4044 Mdot
.282 .4044 Mdot
.292 .4011 Mdot
.298 .40213 Mdot
.3 .40152 Mdot
.302 .4011 Mdot
.304 .4011 Mdot
.306 .4011 Mdot
.312 .40172 Mdot
.368 .40152 Mdot
.374 .40172 Mdot
.376 .40172 Mdot
.378 .40193 Mdot
.388 .40193 Mdot
.396 .40234 Mdot
.41 .40296 Mdot
.412 .40296 Mdot
.414 .40193 Mdot
.416 .40193 Mdot
.42 .40193 Mdot
.422 .40193 Mdot
.426 .40193 Mdot
.428 .40193 Mdot
.43 .40131 Mdot
.432 .4009 Mdot
.436 .40213 Mdot
.438 .40234 Mdot
.44 .40234 Mdot
.442 .40234 Mdot
.444 .40172 Mdot
.446 .40172 Mdot
.448 .40234 Mdot
.45 .40234 Mdot
.454 .40255 Mdot
.456 .40255 Mdot
.458 .40255 Mdot
.468 .40358 Mdot
.5 .40358 Mdot
.502 .40296 Mdot
.504 .40296 Mdot
.506 .40296 Mdot
.508 .40296 Mdot
.512 .40337 Mdot
.516 .40275 Mdot
.528 .40275 Mdot
.532 .40337 Mdot
.534 .40275 Mdot
.536 .40255 Mdot
.538 .10259 Mdot
.542 .10362 Mdot
.544 .10424 Mdot
.548 .10424 Mdot
.556 .10424 Mdot
.558 .10424 Mdot
.56 .10424 Mdot
.562 .10424 Mdot
.566 .39843 Mdot
.568 .39966 Mdot
.57 .40028 Mdot
.574 .40213 Mdot
.576 .40275 Mdot
.578 .40296 Mdot
.58 .40296 Mdot
.584 .40234 Mdot
.588 .40234 Mdot
.59 .40255 Mdot
.598 .40234 Mdot
.6 .40234 Mdot
.602 .40193 Mdot
.604 .40399 Mdot
.606 .4044 Mdot
.608 .4044 Mdot
.616 .4044 Mdot
.622 .40461 Mdot
.624 .40502 Mdot
.626 .40502 Mdot
.628 .40502 Mdot
.632 .40564 Mdot
.634 .40522 Mdot
.64 .40502 Mdot
.644 .40502 Mdot
.646 .40502 Mdot
.648 .40564 Mdot
.654 .40522 Mdot
.682 .40172 Mdot
.684 .40131 Mdot
.686 .40131 Mdot
.692 .40275 Mdot
.694 .40275 Mdot
.738 .39904 Mdot
.74 .39904 Mdot
.746 .39863 Mdot
.748 .39328 Mdot
.75 .39328 Mdot
.752 .39328 Mdot
.754 .39328 Mdot
.768 .39225 Mdot
.77 .39225 Mdot
.774 .60588 Mdot
.778 .27606 Mdot
.78 .54552 Mdot
.784 .31952 Mdot
.79 .44045 Mdot
.794 .48227 Mdot
.796 .35867 Mdot
.798 .10465 Mdot
.802 .0995 Mdot
.804 .0995 Mdot
.806 .10012 Mdot
.808 .10074 Mdot
.81 .0995 Mdot
.812 .0995 Mdot
.822 .10012 Mdot
.824 .10012 Mdot
.828 .10012 Mdot
.83 .0995 Mdot
.832 .39492 Mdot
.834 .39616 Mdot
.836 .39575 Mdot
.84 .39616 Mdot
.844 .39616 Mdot
.85 .39616 Mdot
.854 .39884 Mdot
.856 .39431 Mdot
.5 Mabswid
.774 0 m
.774 .61803 L
.796 .61803 L
.796 0 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2077 x @beginspecial 57 @llx 3 @lly 558
@urx 313 @ury 3885 @rwi @setspecial
%%BeginDocument: energy_vs_time.tex_gr2.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 57 3 558 313
%%HiResBoundingBox: 57.1875 3.1875 557.875 312.625
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, December 12, 2001) (13:54:04)
%%Title: Clipboard
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 315.812 translate 1 -1 scale
gsave
0.000 0.000 0.000 setrgbcolor
1.000 setlinewidth
gsave
newpath
 57.188 312.625 moveto
 557.875 312.625 lineto
 557.875 3.188 lineto
 57.188 3.188 lineto
 57.188 312.625 lineto
closepath
clip newpath
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
57.187500 312.625000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		500.687500 def
/Mheight	309.437500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-243 0.002 -4572.57 882.906 [
[.2 -0.0125 -18 -9 ]
[.2 -0.0125 18 0 ]
[.4 -0.0125 -18 -9 ]
[.4 -0.0125 18 0 ]
[.6 -0.0125 -18 -9 ]
[.6 -0.0125 18 0 ]
[.8 -0.0125 -18 -9 ]
[.8 -0.0125 18 0 ]
[1 -0.0125 -18 -9 ]
[1 -0.0125 18 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -32 -18.8125 ]
[.5 -0.0125 32 -9 ]
[-0.0125 .08829 -36 -4.5 ]
[-0.0125 .08829 0 4.5 ]
[-0.0125 .17658 -36 -4.5 ]
[-0.0125 .17658 0 4.5 ]
[-0.0125 .26487 -36 -4.5 ]
[-0.0125 .26487 0 4.5 ]
[-0.0125 .35316 -36 -4.5 ]
[-0.0125 .35316 0 4.5 ]
[-0.0125 .44145 -36 -4.5 ]
[-0.0125 .44145 0 4.5 ]
[-0.0125 .52974 -36 -4.5 ]
[-0.0125 .52974 0 4.5 ]
[-0.0125 .61803 -36 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -46.125 -56 ]
[-0.01875 .30902 -36 56 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2 0 m
.2 .00625 L
s
[(121600)] .2 -0.0125 0 1 Mshowa
.4 0 m
.4 .00625 L
s
[(121700)] .4 -0.0125 0 1 Mshowa
.6 0 m
.6 .00625 L
s
[(121800)] .6 -0.0125 0 1 Mshowa
.8 0 m
.8 .00625 L
s
[(121900)] .8 -0.0125 0 1 Mshowa
1 0 m
1 .00625 L
s
[(122000)] 1 -0.0125 0 1 Mshowa
.125 Mabswid
.04 0 m
.04 .00375 L
s
.08 0 m
.08 .00375 L
s
.12 0 m
.12 .00375 L
s
.16 0 m
.16 .00375 L
s
.24 0 m
.24 .00375 L
s
.28 0 m
.28 .00375 L
s
.32 0 m
.32 .00375 L
s
.36 0 m
.36 .00375 L
s
.44 0 m
.44 .00375 L
s
.48 0 m
.48 .00375 L
s
.52 0 m
.52 .00375 L
s
.56 0 m
.56 .00375 L
s
.64 0 m
.64 .00375 L
s
.68 0 m
.68 .00375 L
s
.72 0 m
.72 .00375 L
s
.76 0 m
.76 .00375 L
s
.84 0 m
.84 .00375 L
s
.88 0 m
.88 .00375 L
s
.92 0 m
.92 .00375 L
s
.96 0 m
.96 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
.5 -0.0125 -93 -22.8125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Run) show
87.000 11.250 moveto
(Number) show
123.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .08829 m
.00625 .08829 L
s
[(5.1791)] -0.0125 .08829 1 0 Mshowa
0 .17658 m
.00625 .17658 L
s
[(5.1792)] -0.0125 .17658 1 0 Mshowa
0 .26487 m
.00625 .26487 L
s
[(5.1793)] -0.0125 .26487 1 0 Mshowa
0 .35316 m
.00625 .35316 L
s
[(5.1794)] -0.0125 .35316 1 0 Mshowa
0 .44145 m
.00625 .44145 L
s
[(5.1795)] -0.0125 .44145 1 0 Mshowa
0 .52974 m
.00625 .52974 L
s
[(5.1796)] -0.0125 .52974 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(5.1797)] -0.0125 .61803 1 0 Mshowa
.125 Mabswid
0 .01766 m
.00375 .01766 L
s
0 .03532 m
.00375 .03532 L
s
0 .05297 m
.00375 .05297 L
s
0 .07063 m
.00375 .07063 L
s
0 .10595 m
.00375 .10595 L
s
0 .12361 m
.00375 .12361 L
s
0 .14126 m
.00375 .14126 L
s
0 .15892 m
.00375 .15892 L
s
0 .19424 m
.00375 .19424 L
s
0 .2119 m
.00375 .2119 L
s
0 .22956 m
.00375 .22956 L
s
0 .24721 m
.00375 .24721 L
s
0 .28253 m
.00375 .28253 L
s
0 .30019 m
.00375 .30019 L
s
0 .31785 m
.00375 .31785 L
s
0 .3355 m
.00375 .3355 L
s
0 .37082 m
.00375 .37082 L
s
0 .38848 m
.00375 .38848 L
s
0 .40614 m
.00375 .40614 L
s
0 .42379 m
.00375 .42379 L
s
0 .45911 m
.00375 .45911 L
s
0 .47677 m
.00375 .47677 L
s
0 .49443 m
.00375 .49443 L
s
0 .51209 m
.00375 .51209 L
s
0 .5474 m
.00375 .5474 L
s
0 .56506 m
.00375 .56506 L
s
0 .58272 m
.00375 .58272 L
s
0 .60038 m
.00375 .60038 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -158.062 -9.0625 Mabsadd m
1 1 Mabs scale
currentpoint translate
117 9.0625 translate
90 rotate
-117 -9.0625 translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.563 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.563 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Beam) show
93.000 11.563 moveto
(Energy) show
135.000 11.563 moveto
(in) show
153.000 11.563 moveto
(GeV) show
171.000 11.563 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .61178 m
0 .61803 L
s
.2 .61178 m
.2 .61803 L
s
.4 .61178 m
.4 .61803 L
s
.6 .61178 m
.6 .61803 L
s
.8 .61178 m
.8 .61803 L
s
.125 Mabswid
.04 .61428 m
.04 .61803 L
s
.08 .61428 m
.08 .61803 L
s
.12 .61428 m
.12 .61803 L
s
.16 .61428 m
.16 .61803 L
s
.24 .61428 m
.24 .61803 L
s
.28 .61428 m
.28 .61803 L
s
.32 .61428 m
.32 .61803 L
s
.36 .61428 m
.36 .61803 L
s
.44 .61428 m
.44 .61803 L
s
.48 .61428 m
.48 .61803 L
s
.52 .61428 m
.52 .61803 L
s
.56 .61428 m
.56 .61803 L
s
.64 .61428 m
.64 .61803 L
s
.68 .61428 m
.68 .61803 L
s
.72 .61428 m
.72 .61803 L
s
.76 .61428 m
.76 .61803 L
s
.84 .61428 m
.84 .61803 L
s
.88 .61428 m
.88 .61803 L
s
.92 .61428 m
.92 .61803 L
s
.96 .61428 m
.96 .61803 L
s
.25 Mabswid
0 .61803 m
1 .61803 L
s
.99375 0 m
1 0 L
s
.99375 .08829 m
1 .08829 L
s
.99375 .17658 m
1 .17658 L
s
.99375 .26487 m
1 .26487 L
s
.99375 .35316 m
1 .35316 L
s
.99375 .44145 m
1 .44145 L
s
.99375 .52974 m
1 .52974 L
s
.125 Mabswid
.99625 .01766 m
1 .01766 L
s
.99625 .03532 m
1 .03532 L
s
.99625 .05297 m
1 .05297 L
s
.99625 .07063 m
1 .07063 L
s
.99625 .10595 m
1 .10595 L
s
.99625 .12361 m
1 .12361 L
s
.99625 .14126 m
1 .14126 L
s
.99625 .15892 m
1 .15892 L
s
.99625 .19424 m
1 .19424 L
s
.99625 .2119 m
1 .2119 L
s
.99625 .22956 m
1 .22956 L
s
.99625 .24721 m
1 .24721 L
s
.99625 .28253 m
1 .28253 L
s
.99625 .30019 m
1 .30019 L
s
.99625 .31785 m
1 .31785 L
s
.99625 .3355 m
1 .3355 L
s
.99625 .37082 m
1 .37082 L
s
.99625 .38848 m
1 .38848 L
s
.99625 .40614 m
1 .40614 L
s
.99625 .42379 m
1 .42379 L
s
.99625 .45911 m
1 .45911 L
s
.99625 .47677 m
1 .47677 L
s
.99625 .49443 m
1 .49443 L
s
.99625 .51209 m
1 .51209 L
s
.99625 .5474 m
1 .5474 L
s
.99625 .56506 m
1 .56506 L
s
.99625 .58272 m
1 .58272 L
s
.99625 .60038 m
1 .60038 L
s
.25 Mabswid
1 0 m
1 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
0 .35405 m
.04057 .35405 L
.08481 .35405 L
.12636 .35405 L
.16632 .35405 L
.20885 .35405 L
.2498 .35405 L
.29331 .35405 L
.33524 .35405 L
.37557 .35405 L
.41848 .35405 L
.4598 .35405 L
.49953 .35405 L
.54183 .35405 L
.58254 .35405 L
.62583 .35405 L
.66752 .35405 L
.70762 .35405 L
.7503 .35405 L
.79139 .35405 L
.83505 .35405 L
.87712 .35405 L
.9176 .35405 L
.96065 .35405 L
1 .35405 L
s
.008 w
.068 .55623 Mdot
.07 .52974 Mdot
.072 .52974 Mdot
.078 .47677 Mdot
.08 .52974 Mdot
.084 .52974 Mdot
.086 .50326 Mdot
.088 .49443 Mdot
.09 .49443 Mdot
.094 .4856 Mdot
.096 .4856 Mdot
.098 .4856 Mdot
.102 .46794 Mdot
.104 .47677 Mdot
.106 .45028 Mdot
.108 .45028 Mdot
.11 .45911 Mdot
.112 .4856 Mdot
.114 .45911 Mdot
.116 .4856 Mdot
.118 .52091 Mdot
.122 .52091 Mdot
.126 .5474 Mdot
.128 .5474 Mdot
.13 .57389 Mdot
.136 .55623 Mdot
.138 .52974 Mdot
.148 .55623 Mdot
.252 .44145 Mdot
.256 .47677 Mdot
.26 .51209 Mdot
.262 .51209 Mdot
.266 .47677 Mdot
.272 .56506 Mdot
.274 .5474 Mdot
.276 .5474 Mdot
.28 .55623 Mdot
.282 .55623 Mdot
.292 .41497 Mdot
.298 .45911 Mdot
.3 .43262 Mdot
.302 .41497 Mdot
.304 .41497 Mdot
.306 .41497 Mdot
.312 .44145 Mdot
.368 .43262 Mdot
.374 .44145 Mdot
.376 .44145 Mdot
.378 .45028 Mdot
.388 .45028 Mdot
.396 .46794 Mdot
.41 .49443 Mdot
.412 .49443 Mdot
.414 .45028 Mdot
.416 .45028 Mdot
.42 .45028 Mdot
.422 .45028 Mdot
.426 .45028 Mdot
.428 .45028 Mdot
.43 .42379 Mdot
.432 .40614 Mdot
.436 .45911 Mdot
.438 .46794 Mdot
.44 .46794 Mdot
.442 .46794 Mdot
.444 .44145 Mdot
.446 .44145 Mdot
.448 .46794 Mdot
.45 .46794 Mdot
.454 .47677 Mdot
.456 .47677 Mdot
.458 .47677 Mdot
.468 .52091 Mdot
.5 .52091 Mdot
.502 .49443 Mdot
.504 .49443 Mdot
.506 .49443 Mdot
.508 .49443 Mdot
.512 .51209 Mdot
.516 .4856 Mdot
.528 .4856 Mdot
.532 .51209 Mdot
.534 .4856 Mdot
.536 .47677 Mdot
.566 .30019 Mdot
.568 .35316 Mdot
.57 .37965 Mdot
.574 .45911 Mdot
.576 .4856 Mdot
.578 .49443 Mdot
.58 .49443 Mdot
.584 .46794 Mdot
.588 .46794 Mdot
.59 .47677 Mdot
.598 .46794 Mdot
.6 .46794 Mdot
.602 .45028 Mdot
.604 .53857 Mdot
.606 .55623 Mdot
.608 .55623 Mdot
.616 .55623 Mdot
.622 .56506 Mdot
.624 .58272 Mdot
.626 .58272 Mdot
.628 .58272 Mdot
.632 .6092 Mdot
.634 .59155 Mdot
.64 .58272 Mdot
.644 .58272 Mdot
.646 .58272 Mdot
.648 .6092 Mdot
.654 .59155 Mdot
.682 .44145 Mdot
.684 .42379 Mdot
.686 .42379 Mdot
.692 .4856 Mdot
.694 .4856 Mdot
.738 .32668 Mdot
.74 .32668 Mdot
.746 .30902 Mdot
.748 .07946 Mdot
.75 .07946 Mdot
.752 .07946 Mdot
.754 .07946 Mdot
.768 .03532 Mdot
.77 .03532 Mdot
.832 .15009 Mdot
.834 .20307 Mdot
.836 .18541 Mdot
.84 .20307 Mdot
.844 .20307 Mdot
.85 .20307 Mdot
.854 .31785 Mdot
.856 .12361 Mdot
.5 Mabswid
.774 0 m
.774 .61803 L
.796 .61803 L
.796 0 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

grestore
grestore
%%Trailer
%%EOF

%%EndDocument
 @endspecial eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
