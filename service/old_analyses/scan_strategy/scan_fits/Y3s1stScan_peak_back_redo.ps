%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: printout_data.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Math1Mono Courier
%%EndComments
%DVIPSCommandLine: dvips -o Y3s1stScan_peak_back_redo.ps
%+ printout_data.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.12.06:1708
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (printout_data.dvi)
@start end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 639 2211 a @beginspecial 57 @llx 3 @lly 484 @urx
267 @ury 3437 @rwi @setspecial
%%BeginDocument: Y3s1stScan_peak_redo.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 57 3 484 267
%%HiResBoundingBox: 57.1875 3.1875 483.312 266.562
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, December 5, 2001) (2:53:02)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 269.75 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
57.187500 266.562500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		426.125000 def
/Mheight	263.375000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-29.0238 0.031746 -4.33822 0.684423 [
[.02381 -0.0125 -9 -9 ]
[.02381 -0.0125 9 0 ]
[.18254 -0.0125 -9 -9 ]
[.18254 -0.0125 9 0 ]
[.34127 -0.0125 -9 -9 ]
[.34127 -0.0125 9 0 ]
[.5 -0.0125 -9 -9 ]
[.5 -0.0125 9 0 ]
[.65873 -0.0125 -9 -9 ]
[.65873 -0.0125 9 0 ]
[.81746 -0.0125 -9 -9 ]
[.81746 -0.0125 9 0 ]
[.97619 -0.0125 -9 -9 ]
[.97619 -0.0125 9 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -32 -18.8125 ]
[.5 -0.0125 32 -9 ]
[-0.0125 .04209 -18 -4.5 ]
[-0.0125 .04209 0 4.5 ]
[-0.0125 .17898 -18 -4.5 ]
[-0.0125 .17898 0 4.5 ]
[-0.0125 .31586 -18 -4.5 ]
[-0.0125 .31586 0 4.5 ]
[-0.0125 .45275 -6 -4.5 ]
[-0.0125 .45275 0 4.5 ]
[-0.0125 .58963 -18 -4.5 ]
[-0.0125 .58963 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -28.125 -86 ]
[-0.01875 .30902 -18 86 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[.5 .63053 -125 0 ]
[.5 .63053 125 10.125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 0 m
.02381 .00625 L
s
[(915)] .02381 -0.0125 0 1 Mshowa
.18254 0 m
.18254 .00625 L
s
[(920)] .18254 -0.0125 0 1 Mshowa
.34127 0 m
.34127 .00625 L
s
[(925)] .34127 -0.0125 0 1 Mshowa
.5 0 m
.5 .00625 L
s
[(930)] .5 -0.0125 0 1 Mshowa
.65873 0 m
.65873 .00625 L
s
[(935)] .65873 -0.0125 0 1 Mshowa
.81746 0 m
.81746 .00625 L
s
[(940)] .81746 -0.0125 0 1 Mshowa
.97619 0 m
.97619 .00625 L
s
[(945)] .97619 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -93 -22.8125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Run) show
87.000 11.250 moveto
(Number) show
123.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .04209 m
.00625 .04209 L
s
[(6.4)] -0.0125 .04209 1 0 Mshowa
0 .17898 m
.00625 .17898 L
s
[(6.6)] -0.0125 .17898 1 0 Mshowa
0 .31586 m
.00625 .31586 L
s
[(6.8)] -0.0125 .31586 1 0 Mshowa
0 .45275 m
.00625 .45275 L
s
[(7)] -0.0125 .45275 1 0 Mshowa
0 .58963 m
.00625 .58963 L
s
[(7.2)] -0.0125 .58963 1 0 Mshowa
.125 Mabswid
0 .07631 m
.00375 .07631 L
s
0 .11053 m
.00375 .11053 L
s
0 .14476 m
.00375 .14476 L
s
0 .2132 m
.00375 .2132 L
s
0 .24742 m
.00375 .24742 L
s
0 .28164 m
.00375 .28164 L
s
0 .35008 m
.00375 .35008 L
s
0 .3843 m
.00375 .3843 L
s
0 .41852 m
.00375 .41852 L
s
0 .48697 m
.00375 .48697 L
s
0 .52119 m
.00375 .52119 L
s
0 .55541 m
.00375 .55541 L
s
0 .00787 m
.00375 .00787 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -170.062 -9.0625 Mabsadd m
1 1 Mabs scale
currentpoint translate
147 9.0625 translate
90 rotate
-147 -9.0625 translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.562 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Hadronic) show
117.000 11.562 moveto
(cross) show
147.000 11.562 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
153.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(section) show
201.000 11.562 moveto
(in) show
219.000 11.562 moveto
(nb) show
231.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .61803 m
1 .61803 L
s
1 0 m
1 .61803 L
s
gsave
.5 .63053 -186 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.562 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Peak) show
93.000 11.562 moveto
(Hadronic) show
147.000 11.562 moveto
(Cross) show
177.000 11.562 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
183.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(section) show
231.000 11.562 moveto
(vs) show
249.000 11.562 moveto
(Run) show
273.000 11.562 moveto
(Number) show
309.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.001 w
.05556 .53488 m
.05556 .41168 L
s
.05556 .53488 1.5 0 Mabsadd m
.05556 .53488 -1.5 0 Mabsadd L s
.05556 .41168 1.5 0 Mabsadd m
.05556 .41168 -1.5 0 Mabsadd L s
.0873 .41852 m
.0873 .30902 L
s
.0873 .41852 1.5 0 Mabsadd m
.0873 .41852 -1.5 0 Mabsadd L s
.0873 .30902 1.5 0 Mabsadd m
.0873 .30902 -1.5 0 Mabsadd L s
.11905 .45959 m
.11905 .33639 L
s
.11905 .45959 1.5 0 Mabsadd m
.11905 .45959 -1.5 0 Mabsadd L s
.11905 .33639 1.5 0 Mabsadd m
.11905 .33639 -1.5 0 Mabsadd L s
.18254 .39115 m
.18254 .26795 L
s
.18254 .39115 1.5 0 Mabsadd m
.18254 .39115 -1.5 0 Mabsadd L s
.18254 .26795 1.5 0 Mabsadd m
.18254 .26795 -1.5 0 Mabsadd L s
.30952 .60332 m
.30952 .35693 L
s
.30952 .60332 1.5 0 Mabsadd m
.30952 .60332 -1.5 0 Mabsadd L s
.30952 .35693 1.5 0 Mabsadd m
.30952 .35693 -1.5 0 Mabsadd L s
.34127 .45959 m
.34127 .33639 L
s
.34127 .45959 1.5 0 Mabsadd m
.34127 .45959 -1.5 0 Mabsadd L s
.34127 .33639 1.5 0 Mabsadd m
.34127 .33639 -1.5 0 Mabsadd L s
.40476 .46643 m
.40476 .35693 L
s
.40476 .46643 1.5 0 Mabsadd m
.40476 .46643 -1.5 0 Mabsadd L s
.40476 .35693 1.5 0 Mabsadd m
.40476 .35693 -1.5 0 Mabsadd L s
.43651 .43221 m
.43651 .33639 L
s
.43651 .43221 1.5 0 Mabsadd m
.43651 .43221 -1.5 0 Mabsadd L s
.43651 .33639 1.5 0 Mabsadd m
.43651 .33639 -1.5 0 Mabsadd L s
.46825 .45275 m
.46825 .35693 L
s
.46825 .45275 1.5 0 Mabsadd m
.46825 .45275 -1.5 0 Mabsadd L s
.46825 .35693 1.5 0 Mabsadd m
.46825 .35693 -1.5 0 Mabsadd L s
.5 .39115 m
.5 .29533 L
s
.5 .39115 1.5 0 Mabsadd m
.5 .39115 -1.5 0 Mabsadd L s
.5 .29533 1.5 0 Mabsadd m
.5 .29533 -1.5 0 Mabsadd L s
.56349 .51434 m
.56349 .41852 L
s
.56349 .51434 1.5 0 Mabsadd m
.56349 .51434 -1.5 0 Mabsadd L s
.56349 .41852 1.5 0 Mabsadd m
.56349 .41852 -1.5 0 Mabsadd L s
.59524 .34324 m
.59524 .24742 L
s
.59524 .34324 1.5 0 Mabsadd m
.59524 .34324 -1.5 0 Mabsadd L s
.59524 .24742 1.5 0 Mabsadd m
.59524 .24742 -1.5 0 Mabsadd L s
.65873 .35693 m
.65873 .01472 L
s
.65873 .35693 1.5 0 Mabsadd m
.65873 .35693 -1.5 0 Mabsadd L s
.65873 .01472 1.5 0 Mabsadd m
.65873 .01472 -1.5 0 Mabsadd L s
.69048 .46643 m
.69048 .34324 L
s
.69048 .46643 1.5 0 Mabsadd m
.69048 .46643 -1.5 0 Mabsadd L s
.69048 .34324 1.5 0 Mabsadd m
.69048 .34324 -1.5 0 Mabsadd L s
.78571 .37062 m
.78571 .19267 L
s
.78571 .37062 1.5 0 Mabsadd m
.78571 .37062 -1.5 0 Mabsadd L s
.78571 .19267 1.5 0 Mabsadd m
.78571 .19267 -1.5 0 Mabsadd L s
.81746 .41852 m
.81746 .32271 L
s
.81746 .41852 1.5 0 Mabsadd m
.81746 .41852 -1.5 0 Mabsadd L s
.81746 .32271 1.5 0 Mabsadd m
.81746 .32271 -1.5 0 Mabsadd L s
.9127 .53488 m
.9127 .37062 L
s
.9127 .53488 1.5 0 Mabsadd m
.9127 .53488 -1.5 0 Mabsadd L s
.9127 .37062 1.5 0 Mabsadd m
.9127 .37062 -1.5 0 Mabsadd L s
.94444 .4459 m
.94444 .33639 L
s
.94444 .4459 1.5 0 Mabsadd m
.94444 .4459 -1.5 0 Mabsadd L s
.94444 .33639 1.5 0 Mabsadd m
.94444 .33639 -1.5 0 Mabsadd L s
.0001 w
.05556 .47328 -1.875 0 Mabsadd m
.05556 .47328 0 2.5 Mabsadd L
.05556 .47328 1.875 0 Mabsadd L
.05556 .47328 0 -2.5 Mabsadd L
.05556 .47328 -1.875 0 Mabsadd L closepath F
.0873 .36377 -1.875 0 Mabsadd m
.0873 .36377 0 2.5 Mabsadd L
.0873 .36377 1.875 0 Mabsadd L
.0873 .36377 0 -2.5 Mabsadd L
.0873 .36377 -1.875 0 Mabsadd L closepath F
.11905 .39799 -1.875 0 Mabsadd m
.11905 .39799 0 2.5 Mabsadd L
.11905 .39799 1.875 0 Mabsadd L
.11905 .39799 0 -2.5 Mabsadd L
.11905 .39799 -1.875 0 Mabsadd L closepath F
.18254 .32955 -1.875 0 Mabsadd m
.18254 .32955 0 2.5 Mabsadd L
.18254 .32955 1.875 0 Mabsadd L
.18254 .32955 0 -2.5 Mabsadd L
.18254 .32955 -1.875 0 Mabsadd L closepath F
.30952 .48012 -1.875 0 Mabsadd m
.30952 .48012 0 2.5 Mabsadd L
.30952 .48012 1.875 0 Mabsadd L
.30952 .48012 0 -2.5 Mabsadd L
.30952 .48012 -1.875 0 Mabsadd L closepath F
.34127 .39799 -1.875 0 Mabsadd m
.34127 .39799 0 2.5 Mabsadd L
.34127 .39799 1.875 0 Mabsadd L
.34127 .39799 0 -2.5 Mabsadd L
.34127 .39799 -1.875 0 Mabsadd L closepath F
.40476 .41168 -1.875 0 Mabsadd m
.40476 .41168 0 2.5 Mabsadd L
.40476 .41168 1.875 0 Mabsadd L
.40476 .41168 0 -2.5 Mabsadd L
.40476 .41168 -1.875 0 Mabsadd L closepath F
.43651 .3843 -1.875 0 Mabsadd m
.43651 .3843 0 2.5 Mabsadd L
.43651 .3843 1.875 0 Mabsadd L
.43651 .3843 0 -2.5 Mabsadd L
.43651 .3843 -1.875 0 Mabsadd L closepath F
.46825 .40484 -1.875 0 Mabsadd m
.46825 .40484 0 2.5 Mabsadd L
.46825 .40484 1.875 0 Mabsadd L
.46825 .40484 0 -2.5 Mabsadd L
.46825 .40484 -1.875 0 Mabsadd L closepath F
.5 .34324 -1.875 0 Mabsadd m
.5 .34324 0 2.5 Mabsadd L
.5 .34324 1.875 0 Mabsadd L
.5 .34324 0 -2.5 Mabsadd L
.5 .34324 -1.875 0 Mabsadd L closepath F
.56349 .46643 -1.875 0 Mabsadd m
.56349 .46643 0 2.5 Mabsadd L
.56349 .46643 1.875 0 Mabsadd L
.56349 .46643 0 -2.5 Mabsadd L
.56349 .46643 -1.875 0 Mabsadd L closepath F
.59524 .29533 -1.875 0 Mabsadd m
.59524 .29533 0 2.5 Mabsadd L
.59524 .29533 1.875 0 Mabsadd L
.59524 .29533 0 -2.5 Mabsadd L
.59524 .29533 -1.875 0 Mabsadd L closepath F
.65873 .18582 -1.875 0 Mabsadd m
.65873 .18582 0 2.5 Mabsadd L
.65873 .18582 1.875 0 Mabsadd L
.65873 .18582 0 -2.5 Mabsadd L
.65873 .18582 -1.875 0 Mabsadd L closepath F
.69048 .40484 -1.875 0 Mabsadd m
.69048 .40484 0 2.5 Mabsadd L
.69048 .40484 1.875 0 Mabsadd L
.69048 .40484 0 -2.5 Mabsadd L
.69048 .40484 -1.875 0 Mabsadd L closepath F
.78571 .28164 -1.875 0 Mabsadd m
.78571 .28164 0 2.5 Mabsadd L
.78571 .28164 1.875 0 Mabsadd L
.78571 .28164 0 -2.5 Mabsadd L
.78571 .28164 -1.875 0 Mabsadd L closepath F
.81746 .37062 -1.875 0 Mabsadd m
.81746 .37062 0 2.5 Mabsadd L
.81746 .37062 1.875 0 Mabsadd L
.81746 .37062 0 -2.5 Mabsadd L
.81746 .37062 -1.875 0 Mabsadd L closepath F
.9127 .45275 -1.875 0 Mabsadd m
.9127 .45275 0 2.5 Mabsadd L
.9127 .45275 1.875 0 Mabsadd L
.9127 .45275 0 -2.5 Mabsadd L
.9127 .45275 -1.875 0 Mabsadd L closepath F
.94444 .39115 -1.875 0 Mabsadd m
.94444 .39115 0 2.5 Mabsadd L
.94444 .39115 1.875 0 Mabsadd L
.94444 .39115 0 -2.5 Mabsadd L
.94444 .39115 -1.875 0 Mabsadd L closepath F
.5 Mabswid
.02381 .37974 m
.06244 .37974 L
.10458 .37974 L
.14415 .37974 L
.18221 .37974 L
.22272 .37974 L
.26171 .37974 L
.30316 .37974 L
.34309 .37974 L
.3815 .37974 L
.42237 .37974 L
.46172 .37974 L
.49955 .37974 L
.53984 .37974 L
.57861 .37974 L
.61984 .37974 L
.65954 .37974 L
.69774 .37974 L
.73838 .37974 L
.77751 .37974 L
.81909 .37974 L
.85916 .37974 L
.89771 .37974 L
.93871 .37974 L
.97619 .37974 L
s
[ .03 .02 ] 0 setdash
.02381 .45174 m
.06244 .45174 L
.10458 .45174 L
.14415 .45174 L
.18221 .45174 L
.22272 .45174 L
.26171 .45174 L
.30316 .45174 L
.34309 .45174 L
.3815 .45174 L
.42237 .45174 L
.46172 .45174 L
.49955 .45174 L
.53984 .45174 L
.57861 .45174 L
.61984 .45174 L
.65954 .45174 L
.69774 .45174 L
.73838 .45174 L
.77751 .45174 L
.81909 .45174 L
.85916 .45174 L
.89771 .45174 L
.93871 .45174 L
.97619 .45174 L
s
.02381 .30774 m
.06244 .30774 L
.10458 .30774 L
.14415 .30774 L
.18221 .30774 L
.22272 .30774 L
.26171 .30774 L
.30316 .30774 L
.34309 .30774 L
.3815 .30774 L
.42237 .30774 L
.46172 .30774 L
.49955 .30774 L
.53984 .30774 L
.57861 .30774 L
.61984 .30774 L
.65954 .30774 L
.69774 .30774 L
.73838 .30774 L
.77751 .30774 L
.81909 .30774 L
.85916 .30774 L
.89771 .30774 L
.93871 .30774 L
.97619 .30774 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2289 x @beginspecial 57 @llx 3 @lly 483
@urx 267 @ury 3437 @rwi @setspecial
%%BeginDocument: Y3s1stScan_back_redo.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 57 3 483 267
%%HiResBoundingBox: 57.1875 3.1875 482.625 266.125
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, December 5, 2001) (2:52:41)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 269.312 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
57.187500 266.125000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		425.437500 def
/Mheight	262.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-47.4894 0.0529101 -3.5537 1.22626 [
[.02381 -0.0125 -9 -9 ]
[.02381 -0.0125 9 0 ]
[.12963 -0.0125 -9 -9 ]
[.12963 -0.0125 9 0 ]
[.23545 -0.0125 -9 -9 ]
[.23545 -0.0125 9 0 ]
[.34127 -0.0125 -9 -9 ]
[.34127 -0.0125 9 0 ]
[.44709 -0.0125 -9 -9 ]
[.44709 -0.0125 9 0 ]
[.55291 -0.0125 -9 -9 ]
[.55291 -0.0125 9 0 ]
[.65873 -0.0125 -9 -9 ]
[.65873 -0.0125 9 0 ]
[.76455 -0.0125 -9 -9 ]
[.76455 -0.0125 9 0 ]
[.87037 -0.0125 -9 -9 ]
[.87037 -0.0125 9 0 ]
[.97619 -0.0125 -9 -9 ]
[.97619 -0.0125 9 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -32 -18.8125 ]
[.5 -0.0125 32 -9 ]
[-0.0125 .00245 -18 -4.5 ]
[-0.0125 .00245 0 4.5 ]
[-0.0125 .12508 -6 -4.5 ]
[-0.0125 .12508 0 4.5 ]
[-0.0125 .2477 -18 -4.5 ]
[-0.0125 .2477 0 4.5 ]
[-0.0125 .37033 -18 -4.5 ]
[-0.0125 .37033 0 4.5 ]
[-0.0125 .49296 -18 -4.5 ]
[-0.0125 .49296 0 4.5 ]
[-0.0125 .61558 -18 -4.5 ]
[-0.0125 .61558 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -28.125 -86 ]
[-0.01875 .30902 -18 86 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[.5 .63053 -140 0 ]
[.5 .63053 140 10.125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 0 m
.02381 .00625 L
s
[(898)] .02381 -0.0125 0 1 Mshowa
.12963 0 m
.12963 .00625 L
s
[(900)] .12963 -0.0125 0 1 Mshowa
.23545 0 m
.23545 .00625 L
s
[(902)] .23545 -0.0125 0 1 Mshowa
.34127 0 m
.34127 .00625 L
s
[(904)] .34127 -0.0125 0 1 Mshowa
.44709 0 m
.44709 .00625 L
s
[(906)] .44709 -0.0125 0 1 Mshowa
.55291 0 m
.55291 .00625 L
s
[(908)] .55291 -0.0125 0 1 Mshowa
.65873 0 m
.65873 .00625 L
s
[(910)] .65873 -0.0125 0 1 Mshowa
.76455 0 m
.76455 .00625 L
s
[(912)] .76455 -0.0125 0 1 Mshowa
.87037 0 m
.87037 .00625 L
s
[(914)] .87037 -0.0125 0 1 Mshowa
.97619 0 m
.97619 .00625 L
s
[(916)] .97619 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -93 -22.8125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Run) show
87.000 11.250 moveto
(Number) show
123.000 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .00245 m
.00625 .00245 L
s
[(2.9)] -0.0125 .00245 1 0 Mshowa
0 .12508 m
.00625 .12508 L
s
[(3)] -0.0125 .12508 1 0 Mshowa
0 .2477 m
.00625 .2477 L
s
[(3.1)] -0.0125 .2477 1 0 Mshowa
0 .37033 m
.00625 .37033 L
s
[(3.2)] -0.0125 .37033 1 0 Mshowa
0 .49296 m
.00625 .49296 L
s
[(3.3)] -0.0125 .49296 1 0 Mshowa
0 .61558 m
.00625 .61558 L
s
[(3.4)] -0.0125 .61558 1 0 Mshowa
.125 Mabswid
0 .02698 m
.00375 .02698 L
s
0 .0515 m
.00375 .0515 L
s
0 .07603 m
.00375 .07603 L
s
0 .10055 m
.00375 .10055 L
s
0 .1496 m
.00375 .1496 L
s
0 .17413 m
.00375 .17413 L
s
0 .19865 m
.00375 .19865 L
s
0 .22318 m
.00375 .22318 L
s
0 .27223 m
.00375 .27223 L
s
0 .29675 m
.00375 .29675 L
s
0 .32128 m
.00375 .32128 L
s
0 .3458 m
.00375 .3458 L
s
0 .39486 m
.00375 .39486 L
s
0 .41938 m
.00375 .41938 L
s
0 .44391 m
.00375 .44391 L
s
0 .46843 m
.00375 .46843 L
s
0 .51748 m
.00375 .51748 L
s
0 .54201 m
.00375 .54201 L
s
0 .56653 m
.00375 .56653 L
s
0 .59106 m
.00375 .59106 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -170.062 -9.0625 Mabsadd m
1 1 Mabs scale
currentpoint translate
147 9.0625 translate
90 rotate
-147 -9.0625 translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.562 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Hadronic) show
117.000 11.562 moveto
(cross) show
147.000 11.562 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
153.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(section) show
201.000 11.562 moveto
(in) show
219.000 11.562 moveto
(nb) show
231.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .61803 m
1 .61803 L
s
1 0 m
1 .61803 L
s
gsave
.5 .63053 -201 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.125 translate 1 -1 scale
63.000 11.562 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Continuum) show
123.000 11.562 moveto
(Hadronic) show
177.000 11.562 moveto
(Cross) show
207.000 11.562 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
213.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(section) show
261.000 11.562 moveto
(vs) show
279.000 11.562 moveto
(Run) show
303.000 11.562 moveto
(Number) show
339.000 11.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.001 w
.07672 .52974 m
.07672 .38259 L
s
.07672 .52974 1.5 0 Mabsadd m
.07672 .52974 -1.5 0 Mabsadd L s
.07672 .38259 1.5 0 Mabsadd m
.07672 .38259 -1.5 0 Mabsadd L s
.18254 .41938 m
.18254 .27223 L
s
.18254 .41938 1.5 0 Mabsadd m
.18254 .41938 -1.5 0 Mabsadd L s
.18254 .27223 1.5 0 Mabsadd m
.18254 .27223 -1.5 0 Mabsadd L s
.23545 .40712 m
.23545 .16187 L
s
.23545 .40712 1.5 0 Mabsadd m
.23545 .40712 -1.5 0 Mabsadd L s
.23545 .16187 1.5 0 Mabsadd m
.23545 .16187 -1.5 0 Mabsadd L s
.28836 .46843 m
.28836 .32128 L
s
.28836 .46843 1.5 0 Mabsadd m
.28836 .46843 -1.5 0 Mabsadd L s
.28836 .32128 1.5 0 Mabsadd m
.28836 .32128 -1.5 0 Mabsadd L s
.34127 .55427 m
.34127 .40712 L
s
.34127 .55427 1.5 0 Mabsadd m
.34127 .55427 -1.5 0 Mabsadd L s
.34127 .40712 1.5 0 Mabsadd m
.34127 .40712 -1.5 0 Mabsadd L s
.39418 .54201 m
.39418 .39486 L
s
.39418 .54201 1.5 0 Mabsadd m
.39418 .54201 -1.5 0 Mabsadd L s
.39418 .39486 1.5 0 Mabsadd m
.39418 .39486 -1.5 0 Mabsadd L s
.44709 .46843 m
.44709 .27223 L
s
.44709 .46843 1.5 0 Mabsadd m
.44709 .46843 -1.5 0 Mabsadd L s
.44709 .27223 1.5 0 Mabsadd m
.44709 .27223 -1.5 0 Mabsadd L s
.60582 .35807 m
.60582 .01472 L
s
.60582 .35807 1.5 0 Mabsadd m
.60582 .35807 -1.5 0 Mabsadd L s
.60582 .01472 1.5 0 Mabsadd m
.60582 .01472 -1.5 0 Mabsadd L s
.71164 .52974 m
.71164 .38259 L
s
.71164 .52974 1.5 0 Mabsadd m
.71164 .52974 -1.5 0 Mabsadd L s
.71164 .38259 1.5 0 Mabsadd m
.71164 .38259 -1.5 0 Mabsadd L s
.76455 .45617 m
.76455 .30902 L
s
.76455 .45617 1.5 0 Mabsadd m
.76455 .45617 -1.5 0 Mabsadd L s
.76455 .30902 1.5 0 Mabsadd m
.76455 .30902 -1.5 0 Mabsadd L s
.87037 .60332 m
.87037 .38259 L
s
.87037 .60332 1.5 0 Mabsadd m
.87037 .60332 -1.5 0 Mabsadd L s
.87037 .38259 1.5 0 Mabsadd m
.87037 .38259 -1.5 0 Mabsadd L s
.92328 .45617 m
.92328 .33354 L
s
.92328 .45617 1.5 0 Mabsadd m
.92328 .45617 -1.5 0 Mabsadd L s
.92328 .33354 1.5 0 Mabsadd m
.92328 .33354 -1.5 0 Mabsadd L s
.0001 w
.07672 .45617 -1.875 0 Mabsadd m
.07672 .45617 0 2.5 Mabsadd L
.07672 .45617 1.875 0 Mabsadd L
.07672 .45617 0 -2.5 Mabsadd L
.07672 .45617 -1.875 0 Mabsadd L closepath F
.18254 .3458 -1.875 0 Mabsadd m
.18254 .3458 0 2.5 Mabsadd L
.18254 .3458 1.875 0 Mabsadd L
.18254 .3458 0 -2.5 Mabsadd L
.18254 .3458 -1.875 0 Mabsadd L closepath F
.23545 .28449 -1.875 0 Mabsadd m
.23545 .28449 0 2.5 Mabsadd L
.23545 .28449 1.875 0 Mabsadd L
.23545 .28449 0 -2.5 Mabsadd L
.23545 .28449 -1.875 0 Mabsadd L closepath F
.28836 .39486 -1.875 0 Mabsadd m
.28836 .39486 0 2.5 Mabsadd L
.28836 .39486 1.875 0 Mabsadd L
.28836 .39486 0 -2.5 Mabsadd L
.28836 .39486 -1.875 0 Mabsadd L closepath F
.34127 .48069 -1.875 0 Mabsadd m
.34127 .48069 0 2.5 Mabsadd L
.34127 .48069 1.875 0 Mabsadd L
.34127 .48069 0 -2.5 Mabsadd L
.34127 .48069 -1.875 0 Mabsadd L closepath F
.39418 .46843 -1.875 0 Mabsadd m
.39418 .46843 0 2.5 Mabsadd L
.39418 .46843 1.875 0 Mabsadd L
.39418 .46843 0 -2.5 Mabsadd L
.39418 .46843 -1.875 0 Mabsadd L closepath F
.44709 .37033 -1.875 0 Mabsadd m
.44709 .37033 0 2.5 Mabsadd L
.44709 .37033 1.875 0 Mabsadd L
.44709 .37033 0 -2.5 Mabsadd L
.44709 .37033 -1.875 0 Mabsadd L closepath F
.60582 .18639 -1.875 0 Mabsadd m
.60582 .18639 0 2.5 Mabsadd L
.60582 .18639 1.875 0 Mabsadd L
.60582 .18639 0 -2.5 Mabsadd L
.60582 .18639 -1.875 0 Mabsadd L closepath F
.71164 .45617 -1.875 0 Mabsadd m
.71164 .45617 0 2.5 Mabsadd L
.71164 .45617 1.875 0 Mabsadd L
.71164 .45617 0 -2.5 Mabsadd L
.71164 .45617 -1.875 0 Mabsadd L closepath F
.76455 .38259 -1.875 0 Mabsadd m
.76455 .38259 0 2.5 Mabsadd L
.76455 .38259 1.875 0 Mabsadd L
.76455 .38259 0 -2.5 Mabsadd L
.76455 .38259 -1.875 0 Mabsadd L closepath F
.87037 .49296 -1.875 0 Mabsadd m
.87037 .49296 0 2.5 Mabsadd L
.87037 .49296 1.875 0 Mabsadd L
.87037 .49296 0 -2.5 Mabsadd L
.87037 .49296 -1.875 0 Mabsadd L closepath F
.92328 .39486 -1.875 0 Mabsadd m
.92328 .39486 0 2.5 Mabsadd L
.92328 .39486 1.875 0 Mabsadd L
.92328 .39486 0 -2.5 Mabsadd L
.92328 .39486 -1.875 0 Mabsadd L closepath F
.5 Mabswid
.02381 .39281 m
.06244 .39281 L
.10458 .39281 L
.14415 .39281 L
.18221 .39281 L
.22272 .39281 L
.26171 .39281 L
.30316 .39281 L
.34309 .39281 L
.3815 .39281 L
.42237 .39281 L
.46172 .39281 L
.49955 .39281 L
.53984 .39281 L
.57861 .39281 L
.61984 .39281 L
.65954 .39281 L
.69774 .39281 L
.73838 .39281 L
.77751 .39281 L
.81909 .39281 L
.85916 .39281 L
.89771 .39281 L
.93871 .39281 L
.97619 .39281 L
s
[ .03 .02 ] 0 setdash
.02381 .47877 m
.06244 .47877 L
.10458 .47877 L
.14415 .47877 L
.18221 .47877 L
.22272 .47877 L
.26171 .47877 L
.30316 .47877 L
.34309 .47877 L
.3815 .47877 L
.42237 .47877 L
.46172 .47877 L
.49955 .47877 L
.53984 .47877 L
.57861 .47877 L
.61984 .47877 L
.65954 .47877 L
.69774 .47877 L
.73838 .47877 L
.77751 .47877 L
.81909 .47877 L
.85916 .47877 L
.89771 .47877 L
.93871 .47877 L
.97619 .47877 L
s
.02381 .30685 m
.06244 .30685 L
.10458 .30685 L
.14415 .30685 L
.18221 .30685 L
.22272 .30685 L
.26171 .30685 L
.30316 .30685 L
.34309 .30685 L
.3815 .30685 L
.42237 .30685 L
.46172 .30685 L
.49955 .30685 L
.53984 .30685 L
.57861 .30685 L
.61984 .30685 L
.65954 .30685 L
.69774 .30685 L
.73838 .30685 L
.77751 .30685 L
.81909 .30685 L
.85916 .30685 L
.89771 .30685 L
.93871 .30685 L
.97619 .30685 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument
 @endspecial eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
