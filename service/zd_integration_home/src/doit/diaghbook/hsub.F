*
* $Id: hsub.F,v 1.1 2003/03/05 17:16:25 dpp Exp $
*
* $Log: hsub.F,v $
* Revision 1.1  2003/03/05 17:16:25  dpp
*      -> NEW ROUTINE
*      -> dpp histogram package, from before Dan was bald
*
*
*
#include "sys/CLEO_machine.h"
#include "pilot.h"
C ALLOWS 147 HISTOGRAMS, VARIABLE NUMBER 1:250
C ALLOWS 97 CUTS, NUMBERED 1:100

C	JCUT IS NUMBER OF THE CUT VARIABLE FOR SUBCUTS
C	ICUT IS THE NUMBER OF SUBCUTS
C	NCUT IS THE NUMBER OF CUTS
C	NCPASS IS THE NUMBER PASSING EACH CUT
C	CUTL AND CUTH ARE THE LIMITS
C	NG IS THE GRAPHING VARIABLE NUMBER
C	N2DIM IS THE 2-DIM SERIAL NUMBER
C	IND2 GIVES THE SEQUENTIAL GRAPH NUMBERS OF A 2-DIM PLOT
C	NC GIVES THE SEQUENTIAL CUT NUMBER
C	NUCUT(SEQUENTIAL)=USER CUT NUMBER
C	>/=GL AND <GH ARE THE GRAPH LIMITS
	SUBROUTINE HISTI
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE

	CHARACTER*50 NAMFL,NAMFLE
	INTEGER IFLOW
	INTEGER IHISTI
	REAL ARN
	INTEGER LNAM
	INTEGER LENOCC
	INTEGER LNAME
	INTEGER NCUT
	INTEGER NCPASS
	INTEGER I
	INTEGER NUCUT
	INTEGER ICUT
	INTEGER NTEMP
	REAL VALL
	REAL VALH
	INTEGER II
	INTEGER JCUT
	REAL CUTL
	REAL CUTH
	REAL COMCUT
	INTEGER IND2
	INTEGER NG
	INTEGER N2T
	INTEGER NCT
	REAL GL
	REAL GH
	INTEGER COMGR
	INTEGER J
	INTEGER MVSCL
	INTEGER NC
	INTEGER JJ
	INTEGER ND
	INTEGER N2DIM
	REAL CFIX
	INTEGER IRAT
	INTEGER NNUMT
	INTEGER IDST
	INTEGER NDIVT
	REAL RMULTT
	INTEGER IRTSZT
	INTEGER IRTERT
	REAL RVLLOT
	REAL RVLHIT
	INTEGER NNUM
	INTEGER IDS
	REAL CTEMP(6)
	INTEGER INDI(11)


	


        COMMON/HSWTCH/IHISTI,IXEQMK

	COMMON/SCALR/ISCAL(80)

	COMMON/CUTS/JCUT(97,10),NCPASS(0:97),NCUT,
     1  CUTL(97,10),CUTH(97,10),ICUT(97),COMCUT(6,97,10)
	COMMON/HIST2/NG(147),N2DIM(147),IND2(2,11),NC(147),
     1  NUCUT(97),GL(147),GH(147),COMGR(6,147)

	COMMON/HIST4/MVSCL(147)

	COMMON/HIST5/ITOT1D,AVE1D,SIG1D,ERR1D,L2D

	COMMON/FIXER/CFIX(250)

	COMMON/RATC/IRAT,IDS(20),NNUM(20),NDIV(20),RMULT(20),
     1  IRATSZ(20),IRATER(20),RVLLO(20),RVLHI(20)





 2	IFLOW=0
	IHISTI=1
        TYPE 1001
 1001	FORMAT(' HSUB: HISTI:',
     2         '  "R"estart old files or create "N"ew histograms ?'/
     1         '                  or type "-" to just skip it')
	ACCEPT 1002,ARN
1002	FORMAT(A1)
	IF(ARN.EQ.'N')GO TO 7
	IF(ARN.EQ.'-')GO TO 5
	IF(ARN.NE.'R')GO TO 2
	CALL RESTRH
	GO TO 999
5       IHISTI=0
	GO TO 999
7       OPEN(UNIT=20,FILE='GKEEP.DAT',FORM='UNFORMATTED',STATUS='NEW')
	OPEN(UNIT=21,FILE='SCLKEP.DAT',STATUS='NEW')
	CLOSE(UNIT=20)
	CLOSE(UNIT=21)
13      TYPE 1003
1003    FORMAT(' HSUB: HISTI:',
     1         ' enter GRAPH file name (without extension), A50')
	ACCEPT 1004,NAMFL
1004    FORMAT(A50)
        LNAM=LENOCC(NAMFL)
        IF(LNAM.LE.46)GO TO 15
        TYPE 1005
1005    FORMAT(' HSUB: HISTI:',' GRAPH FILE NAME TO LONG')
        GO TO 13
15      LNAME=LNAM+4
        NAMFLE(1:LNAME)=NAMFL(1:LNAM)//'.GFL'
	TYPE 1006,NAMFLE
1006    FORMAT(' OPENING ',A50)
	OPEN(UNIT=3,FILE=NAMFLE(1:LNAME),STATUS='OLD')
17      TYPE 1007
1007    FORMAT(' HSUB: HISTI:',
     1         ' enter CUT file name (without extension), A50')
	ACCEPT 1004,NAMFL
        LNAM=LENOCC(NAMFL)
        IF(LNAM.LE.46)GO TO 19
        TYPE 1008
1008    FORMAT(' HSUB: HISTI:',' CUT FILE NAME TO LONG')
        GO TO 17
19      LNAME=LNAM+4
        NAMFLE(1:LNAME)=NAMFL(1:LNAM)//'.CFL'
	TYPE 1006,NAMFLE
	OPEN(UNIT=2,FILE=NAMFLE(1:LNAME),STATUS='OLD')
	TYPE 2001
2001    FORMAT(' HSUB: HISTI:',' FILES OPEN OK')
	NCUT=0
	NCPASS(0)=0
	DO 27 I=1,97
	NUCUT(I)=0
	NCPASS(I)=0
27      ICUT(I)=0
	TYPE 2002
2002    FORMAT(' HSUB: HISTI:',' START TO READ IN CUTS')
	OPEN(UNIT=4,FILE='CCHECK.DAT',STATUS='UNKNOWN')

29      CONTINUE
	READ(2,2003,END=60)NTEMP,VALL,VALH,CTEMP
2003	FORMAT(I,2F,6A4)	!VAX
	IF(NTEMP)41,60,31
C
31	IF(ICUT(NCUT).EQ.10)GO TO 53
	IF(NTEMP.LE.250)GO TO 34

C	HERE WE ARE TRYING TO CUT ON A FORMER CUT
C	MUST FIND THE SEQ NUMBER FOR USER NUMBER NTEMP
	NTEMP=NTEMP-250
	DO 32 I=1,97
	II=I
	IF(NUCUT(II).EQ.NTEMP)GO TO 33
32	CONTINUE
	GO TO 59
C	USER NUMBER FOUND
33	NTEMP=II+250
34	ICUT(NCUT)=ICUT(NCUT)+1
	JCUT(NCUT,ICUT(NCUT))=NTEMP
	CUTL(NCUT,ICUT(NCUT))=VALL
	CUTH(NCUT,ICUT(NCUT))=VALH
	DO 35 I=1,6
35	COMCUT(I,NCUT,ICUT(NCUT))=CTEMP(I)
	GO TO 29

C	NEW CUT,  USER NUMBER NTEMP
C	SEQUENTIAL NUMBER NCUT ,  AFTER INCREMENTING

41	NTEMP=-NTEMP
	IF(NTEMP.GT.100)GO TO 47
	IF(NCUT.EQ.0)GO TO 45
	DO 43 I=1,NCUT
43	IF(NUCUT(I).EQ.NTEMP)GO TO 55
45	NCUT=NCUT+1
	IF(NCUT.GT.97)GO TO 51
	NUCUT(NCUT)=NTEMP	! USER DIRECTORY INDEXED WITH SEQUENTIAL
	WRITE(4,3001),NTEMP
3001    FORMAT(I4)
	GO TO 29

C	ERRORS

47	TYPE 3002,NTEMP
3002	FORMAT(' CUT NUMBER ',I10,' NOT ALLOWED')
49	READ(2,2003,END=60)NTEMP
	IF(NTEMP)41,60,49
51	TYPE 3004
3004	FORMAT(' TOO MANY CUTS IN CUT FILE  MAX=97')
	GO TO 60
53	TYPE 3005,NCUT,NUCUT(NCUT)
3005	FORMAT
     1  (' TOO MANY ELEMENTS IN CUT NUMBER ',I6,' SEQ,  ',I6,' USER')
	READ(2,2003,END=60)NTEMP
	IF(NTEMP)41,60,53
55	TYPE 3006,NTEMP
3006    FORMAT(' USER CUT NUMBER ',I4,' WAS PREVIOUSLY DEFINED')
57	READ(2,2003,END=60)NTEMP
	IF(NTEMP)41,60,57
59	TYPE 3007,NTEMP,NUCUT(NCUT)
3007    FORMAT(' NO USER CUT # ',I6,' REQUIRED FOR USER CUT # ',I6)
	GO TO 29

C	READ IN GRAPH FILE

60	CONTINUE
	CLOSE(UNIT=4)
	DO 61 I=1,11
	IND2(1,I)=0
	IND2(2,I)=0
61	INDI(I)=0
	DO 62 I=1,147
62	NG(I)=0
	I=0
	TYPE 3008
3008    FORMAT(' HSUB: HISTI:',' START TO READ IN GRAPHS')
63	I=I+1
64	READ(3,3009,END=79)NG(I),N2T,NCT,GL(I),GH(I),(COMGR(J,I),J=1,6)
3009    FORMAT(3I,2F,6A4)       !VAX
	IF(NG(I).EQ.0)GO TO 79		! END
	IF(NG(I).GT.0)GO TO 67	!REGULAR
C	NG.LT.0 ,  FIX HEIGHT
	MVSCL(I-1)=-NG(I)
	NG(I)=0
	GO TO 64
67	IF(NG(I).GT.250)GO TO 64	! IGNORE
	MVSCL(I)=0
	NC(I)=0
	IF(NCT.EQ.0)GO TO 71		! NO CUT
	DO 68 J=1,97
	JJ=J
	IF(NUCUT(J).EQ.NCT)GO TO 69
68	CONTINUE
	TYPE 3010,NG(I),ND,NCT,GL(I),GH(I),(COMGR(J,I),J=1,6)
3010    FORMAT(' ERROR',3I5,2F9.5,6A4,/'  CUT NUMBER NOT FOUND'
     1  /'  WILL USE CUT ZERO' )
	GO TO 71
69	NC(I)=JJ
71	CONTINUE
	N2DIM(I)=0
	IF(N2T.LT.1)GO TO 63
	IF(N2T.GT.11)GO TO 74
	IF(INDI(N2T).EQ.2)GO TO 63
	INDI(N2T)=INDI(N2T)+1
	N2DIM(I)=N2T
	IND2(INDI(N2T),N2T)=I
72	CONTINUE
	GO TO 63
74	TYPE 3011
3011    FORMAT(' CAN''T USE INDEX 11 OR GREATER')
	GO TO 63
79	CONTINUE
	TYPE 3012
3012    FORMAT(' NORMAL END TO READING GRAPHS')
	DO 84 I=1,250
84	CFIX(I)=-1.E+11

C	READ IN RATIOS

	IRAT=0
81	READ(3,3013,END=85)NNUMT,IDST,NDIVT,RMULTT,
     1  IRTSZT,IRTERT,RVLLOT,RVLHIT
	TYPE 3013,NNUMT,IDST,NDIVT,RMULTT,
     1  IRTSZT,IRTERT,RVLLOT,RVLHIT
3013    FORMAT(I,1A1,1X,I,F,2I,2F)
	IF(IDST.EQ.'/')GO TO 82
	IF(IDST.EQ.'-')GO TO 83
	GO TO 81
82	CONTINUE
83	CONTINUE
	IF(NNUMT.EQ.0)GO TO 85
	IF(NDIVT.EQ.0)GO TO 85
	IF(RMULTT.EQ.0.)GO TO 85
	IF(IRTSZT.NE.2)IRTSZT=1
	IF(IRTERT.NE.1.AND.IRTERT.NE.2)IRTERT=0
	IRAT=IRAT+1
	NNUM(IRAT)=NNUMT
	IDS(IRAT)=IDST
	NDIV(IRAT)=NDIVT
	RMULT(IRAT)=RMULTT
	IRATSZ(IRAT)=IRTSZT
	IRATER(IRAT)=IRTERT
	RVLLO(IRAT)=RVLLOT
	RVLHI(IRAT)=RVLHIT
	GO TO 81
85	CONTINUE
	TYPE 3014
3014    FORMAT(' END OF RATIO/DIFFER PART, WILL CLOSE DRIVER FILES')
	CLOSE(UNIT=2)
	CLOSE(UNIT=3)
86	IXEQMK=0
	GO TO 88



	ENTRY HISTO(KKS,KKO)
	IF(IXEQMK.NE.0)GO TO 87
	TYPE 3015
3015    FORMAT(' HSUB: HISTO:',' DO NOT EXECUTE HISTO, MAKE NOT CALLED')
	RETURN
87	IFLOW=1
88	CONTINUE
	CALL ALIN0(IDUM)
        TYPE 3016,IFLOW
3016    FORMAT(' HSUB: HISTI:',
     1         ' opening HSUBO.DAT at HISTO entry, IFLOW=',I2)
	OPEN(UNIT=7,FILE='HSUBO.DAT',STATUS='UNKNOWN')
	TYPE 3017
3017    FORMAT(' OPEN SUCCESSFUL')
	WRITE(7,3018)
3018    FORMAT('1CUT#  #PASS  	FIX#	LOW>/=		HIGH<'/
     1         ' ----/--------/------/------------/--------------/---')
	CALL ALINA(2)
        I0CUT=0
c	TYPE 3021
3021	FORMAT(' CHECK:  1')
	WRITE(7,3041) I0CUT,NCPASS(0)
3041    FORMAT(//I4,I10,32X,'UNCUT EVENTS')
        CALL ALINA(3)
c	TYPE 3022
3022	FORMAT(' CHECK:  2')
	DO 91 I=1,NCUT
	IF(NUCUT(I).EQ.0)GO TO 92
	DO 91 J=1,ICUT(I)
	NNN=JCUT(I,J)
	IF(NNN.GT.250)NNN=NUCUT(NNN-250)+250
	IF(J.NE.1)GO TO 90
89	WRITE(7,3042)NUCUT(I),NCPASS(I),NNN,
     1  CUTL(I,J),CUTH(I,J),(COMCUT(K,I,J),K=1,6)
3042    FORMAT(//I4,I10,I7,F11.4,F15.4,6X,6A4)
        CALL ALINA(3)
	GO TO 91
90	WRITE(7,3043)NNN,
     1  CUTL(I,J),CUTH(I,J),(COMCUT(K,I,J),K=1,6)
3043    FORMAT('                 ',I4,F11.4,F15.4,6X,6A4)
        CALL ALINA(1)
91	CONTINUE
c	TYPE 3023
3023	FORMAT(' CHECK:  3')
92	CONTINUE
        CALL ALINF(IDUM)
c	TYPE 3024
3024	FORMAT(' CHECK:  4')
	WRITE(7,3044)
3044    FORMAT(
     1  '1   ','VAR#',' 2D#',' CUT','  #PASS  ',
     2  '     LOW    ','    HIGH    ',X,20X,
     3  ' # IN RANGE','       AVERAGE','         ERROR',
     4  '         SIGMA'/)
        CALL ALINA(2)
c	TYPE 3025
3025	FORMAT(' CHECK:  5')
	DO 93 I=1,147
	IF(NG(I).EQ.0) GO TO 94
	NNCUT=0
	IF(NC(I).NE.0)NNCUT=NUCUT(NC(I))
	CALL HIST1D(I+0,KKS,KKO,1)
	WRITE(7,3045)I,NG(I),N2DIM(I),NNCUT,NCPASS(NC(I)),
     1  GL(I),GH(I),(COMGR(J,I),J=1,6),
     2  ITOT1D,AVE1D,ERR1D,SIG1D
3045    FORMAT(I4,I4,I4,I4,I9,F12.4,F12.4,X,6A4,
     1         I7,F14.6,F14.6,F14.6)
        CALL ALINA(1)
93	CONTINUE
c	TYPE 3026
3026	FORMAT(' CHECK:  6')
94	CONTINUE
c	TYPE 3027
3027	FORMAT(' CHECK:  7')
	DO 95 I=1,11
	IF(IND2(2,I).EQ.0)GO TO 95
	CALL HIST2D(I+0,1)
95	CONTINUE
c	TYPE 3028
3028	FORMAT(' CHECK:  8')
 	IF(IRAT.EQ.0)GO TO 98
	WRITE(7,3046)
3046    FORMAT('1    RATIOS AND SUBTRACTIONS OF HISTOGRAMS',
     1  ' DEFINED ABOVE'///
     1  '  #',17X,'1ST GRAPH',9X,'SEQUENTIAL GRAPH NUMBERS',13X,
     2  '2ND GRAPH',4X,'MULTIPLIER','  SIZE','  ERRBARS',
     3  '   SET VERTICAL'//)
        CALL ALINA(7)
	DO 97 I=1,IRAT
	WRITE(7,3047)I,(COMGR(J,NNUM(I)),J=1,6),NNUM(I),
     1  IDS(I),NDIV(I),(COMGR(J,NDIV(I)),J=1,6),RMULT(I),
     2  IRATSZ(I),IRATER(I),RVLLO(I),RVLHI(I)
3047    FORMAT(I3,3X,6A4,'(#',I2,')  ',A1,'  (#',I2,') ',
     1  6A4,F14.4,I6,I7,X,2F10.4)
        CALL ALINA(1)
97	CONTINUE
98	CONTINUE
c	TYPE 3029
3029	FORMAT(' CHECK:  9')
        CALL ALINF(IDUM)
	WRITE(7,3048)(I,ISCAL(I),I=1,80)
3048    FORMAT('1  SCALERS'///////20(4(I3,':',I13)/))
        CALL ALINA(28)
        CALL ALINF(IDUM)
c	TYPE 3030
3030	FORMAT(' CHECK: 10')
	IF(IFLOW.EQ.0) GO TO 109
	DO 99 I=1,147
99	CALL HIST1D(I+0,KKS,KKO,0)
c	TYPE 3031
3031	FORMAT(' CHECK: 11')
	CALL RAT2
c	TYPE 3032
3032	FORMAT(' CHECK: 12')
	CALL KEEP
c	TYPE 3033
3033	FORMAT(' CHECK: 13')
109     CONTINUE
	TYPE 3049
3049    FORMAT(' HSUB: HSUBO:',' WILL CLOSE UNIT=7')
	CLOSE(UNIT=7)
999     IXEQMK=0
	TYPE 3050,IFLOW,IHISTI,IXEQMK
3050    FORMAT(' HSUB: HISTO:',
     1         ' exit: IFLOW=',I1,' IHISTI=',I1,' IXEQMK=',I9)
	RETURN
	END




	SUBROUTINE HSZERO(N)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	COMMON/SCALR/II(80)
	IF(N.EQ.'ALL')GO TO 20
	IF(N.GT.100)GO TO 10
	IF(N.LT.1.OR.N.GT.147)RETURN
	SUMX1(N)=0.
	SUMX2(N)=0.
	DO 5 J=1,102
5	IHIST(N,J)=0
	RETURN
10	CONTINUE
	NN=N-100
	IF(NN.GT.80)RETURN
	II(NN)=0
	RETURN
20	CONTINUE
	DO 23 I=1,80
	II(I)=0
23	CONTINUE
	DO 25 I=1,147
	SUMX1(I)=0.
	SUMX2(I)=0.
	DO 25 J=1,102
25	IHIST(I,J)=0
	END



	SUBROUTINE ENTER
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
	DIMENSION IHOLD(102)
1	TYPE 101
101	FORMAT(' WHICH HISTOGRAM ?')
	ACCEPT 102, NHIST,IGO
102	FORMAT(I2,2X,I1)
	IF(NHIST.EQ.0)GO TO 9
	IF(IGO.EQ.5)GO TO 5
2	TYPE 103,NHIST
103	FORMAT(' DO YOU WANT TO ZERO HISTOGRAM #',I3)
	ACCEPT 104,GO
104	FORMAT(A1)
	IF(GO.EQ.'N')GO TO 4
	IF(GO.NE.'Y')GO TO 2
	DO 3 I=1,102
3	IHIST(NHIST,I)=0
4	TYPE 105,NHIST,XMIN(NHIST),XMAX(NHIST),(NAME(J,NHIST),J=1,6)
105	FORMAT(I3,2F10.5,'-',6A4,'-',/' DO YOU WANT TO CHANGE ?')!PDP-10
	ACCEPT 104,GO
	IF(GO.EQ.'N')GO TO 5
	IF(GO.NE.'Y')GO TO 4
	ACCEPT 106,XMIN(NHIST),XMAX(NHIST),(NAME(J,NHIST),J=1,6)
106	FORMAT(2X,2F10.5,1X,6A4)!VAX
5	TYPE 107
107	FORMAT(' NOW TYPE IN THE NUMBERS DUMMY')
	ACCEPT 108,IHOLD
108	FORMAT(102G)
	TYPE 111
111	FORMAT(' TYPE BACK ?')
	ACCEPT 104,GO
	IF(GO.NE.'Y')GO TO 6
	TYPE 109,IHOLD
109	FORMAT(' '10I7)
6	TYPE 110
110	FORMAT(' IS THIS OK ?')
	ACCEPT 104,GO
	IF(GO.EQ.'N')GO TO 5
	IF(GO.NE.'Y')GO TO 6
	DO 7 I=1,102
7	IHIST(NHIST,I)=IHIST(NHIST,I)+IHOLD(I)
	CALL KEEP
	GO TO 1
9	CALL KEEP
	END


	SUBROUTINE SHIFT(NHIST,N,IVERT,IS)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	DIMENSION NTEMP(102)
	IF(IS.EQ.1)GO TO 10
	IF(IS.EQ.-1)GO TO 20
	RETURN
10	CONTINUE	! ADD BIN 101 TO 102, BIN2 IS ZERO
	NTEMP(1)=IHIST(NHIST,1)
	NTEMP(2)=0
	DO 12 J=3,101
12	NTEMP(J)=IHIST(NHIST,J-1)
	NTEMP(102)=IHIST(NHIST,101)+IHIST(NHIST,102)
	DIFF=(XMAX(NHIST)-XMIN(NHIST))/100.
	XMAX(NHIST)=XMAX(NHIST)-DIFF
	XMIN(NHIST)=XMIN(NHIST)-DIFF
	GO TO 30
20	CONTINUE	!ADD BIN2 TO BIN1, BIN 101 IS ZERO
	NTEMP(1)=IHIST(NHIST,1)+IHIST(NHIST,2)
	DO 22 J=2,100
22	NTEMP(J)=IHIST(NHIST,J+1)
	NTEMP(101)=0
	NTEMP(102)=IHIST(NHIST,102)
	DIFF=(XMAX(NHIST)-XMIN(NHIST))/100.
	XMAX(NHIST)=XMAX(NHIST)+DIFF
	XMIN(NHIST)=XMIN(NHIST)+DIFF
30	CONTINUE
	DO 32 J=1,102
32	IHIST(NHIST,J)=NTEMP(J)
	CALL HIST1D(NHIST,N,IVERT,0)
	RETURN
	END


	SUBROUTINE HIST1D(NHIST,N,IVERT,NOPRNT)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	DIMENSION IGRAPH(102),F(11),PRINT(102)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2,AVE1T,AVE2T,AVE1T2,TOTALA
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	COMMON/HIST5/ITOTA,AVE1D,SIG1D,ERR1D,L2D
	COMMON/HIST4/MVSCL(147)
	DATA F,XX,BL/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,
     1  1H8,1H9,1H0,1HX,1H /
	ITOT1D=0
	ITOTA=0
	AVE1D=0.
	SIG1D=0.
	ERR1D=0.
	IF(NHIST.EQ.0)RETURN
	IF(NCFIX(NHIST).EQ.0)RETURN
	DO 5 I=1,102
	IGRAPH(I)=IHIST(NHIST,I)
5	ITOT1D=ITOT1D+IGRAPH(I)
	IF(ITOT1D.EQ.0)RETURN
	TOTAL=ITOT1D
	DO 6 I=2,101
6	ITOTA=ITOTA+IGRAPH(I)
	IF(ITOTA.EQ.0)GO TO 7
	TOTALA=ITOTA
        AVE1T=SUMX1(NHIST)/TOTALA
        AVE2T=SUMX2(NHIST)/TOTALA
        AVE1T2=AVE1T**2
	ARG=AVE2T-AVE1T2
	IF(ARG.LT.0.)ARG=0.
        AVE1D=AVE1T
	SIG1D=SQRT(ARG)
	ERR1D=SIG1D/SQRT(TOTALA)
7	IF(NOPRNT.EQ.1)GO TO 320
	LIM=102
	IF(N.EQ.2)GO TO 200
1	XLIM=LIM
	LIM2=LIM-1
	XLIM2=LIM2
	IF(MVSCL(NHIST).EQ.0)GO TO 8	! AUTOSCALE
	SCALE=MVSCL(NHIST)		! SET SCALE
	GO TO 15
8	IHIGH=50
	DO 10 I=2,LIM2
10	IF(IGRAPH(I).GT.IHIGH)IHIGH=IGRAPH(I)
	HIGH=IHIGH
	SCALE=HIGH/50.
15	NNCUT=0
	IF(NCUTG(NHIST).NE.0)NNCUT=NUCUT(NCUTG(NHIST))
	WRITE(7,100),NHIST,NCFIX(NHIST),(NAME(I,NHIST),I=1,6),NNCUT,
     1  AVE1D,SIG1D,
     2  XMIN(NHIST),XMAX(NHIST),SCALE,ITOT1D
100	FORMAT('1         ',I3,'   (',I3,')',6A4,'  CUT ',I3/
     1         '           AVE = ',F12.6,'    SIG = ',F12.6/
     2         '           MIN = ',F12.6,'    MAX = ',F12.6/
     3         '           SCALE=' F12.3,'    TOTAL = ',I11/)
        CALL ALINA(5)
	IF(IVERT.NE.0)GO TO 1000
	DO 41 I=1,50
	XI=I
	H=(50.-XI)*SCALE
	HH=(51.-XI)*SCALE
	DO 30 J=1,LIM
	PRINT(J)=BL
	IF(IGRAPH(J).LE.H)GO TO 30
	IF(IGRAPH(J).GE.HH)GO TO 20
	FRAC=(IGRAPH(J)-H)/SCALE*10.+1.
	IF=FRAC
	PRINT(J)=F(IF)
	GO TO 30
20	PRINT(J)=XX
	IF(I.LT.41)GO TO 30
	IPLACE=51-I
	ITEST1=IGRAPH(J)/10**(IPLACE-1)
	IF(ITEST1.EQ.0)GO TO 30
	ITEST2=ITEST1/10
	ITEST3=ITEST2*10
	ITEST4=ITEST1-ITEST3
	PRINT(J)=F(ITEST4+1)
30	CONTINUE
	II=51-I
	WRITE(7,101)II,(PRINT(K),K=1,LIM)
101	FORMAT(11X,I3,2X,102A1)
        CALL ALINA(1)
41	CONTINUE
	DO 60 I=1,102
	J=I
	DO 50 K=1,20
	IF(J.LE.10)GO TO 60
	J=J-10
50	CONTINUE
60	PRINT(I)=F(J)
	I=0
	WRITE(7,101)I,(PRINT(K),K=1,LIM)
        CALL ALINA(1)
	WRITE(7,103)
103	FORMAT(' ')
        CALL ALINA(1)
	GMAX=ABS(XMAX(NHIST))
	IF(ABS(XMIN(NHIST)).GT.GMAX)GMAX=ABS(XMIN(NHIST))
	XLOG=ALOG10(GMAX)
	IF(XLOG.LT.0.)XLOG=XLOG-1.
	LOG=XLOG
	LOG=4-LOG
	TENLOG=10.**LOG
	XLM2M1=XLIM2-1.
	SPREAD=XMAX(NHIST)-XMIN(NHIST)
	DO 70 I=1,LIM2
	XI=I
	GRAPH=ABS((XMIN(NHIST)+SPREAD*(XI-1.)/XLM2M1)*TENLOG)
70	IGRAPH(I)=GRAPH
	DO 85 I=1,4
	II=5-I
	ITEN=10**II
	DO 80 J=1,LIM2
	IGTMP=IGRAPH(J)
	IW=IGTMP/ITEN
	PRINT(J)=F(IW+1)
	IGTMP=IW*ITEN
	IGRAPH(J)=IGRAPH(J)-IGTMP
80	CONTINUE
	WRITE(7,102)(PRINT(K),K=1,LIM2)
102	FORMAT(16X,102A1)
        CALL ALINA(1)
85	CONTINUE
	GO TO 300
200	LIM=52
	DO 210 I=2,51
210	IGRAPH(I)=IGRAPH(2*I-2)+IGRAPH(2*I-1)
	IGRAPH(52)=IGRAPH(102)
	GO TO 1
1000	DO 1060 I=1,50
	J=I
	DO 1050 K=1,20
	IF(J.LE.10)GO TO 1060
	J=J-10
1050	CONTINUE
1060	PRINT(I)=F(J+1)
	WRITE(7,105)(PRINT(K),K=1,50)
105	FORMAT(32X,50A1/)
        CALL ALINA(2)
	S1=1.
	S2=2.
	VV=-1.E30
	DO 1041 I=1,LIM
	V=VV
	XI=I
	VV=XMIN(NHIST)+(XI-S1)/(XLIM-S2)*(XMAX(NHIST)-XMIN(NHIST))
	IF(I.EQ.LIM)VV=1.E30
	JMAX=1
	DO 1030 J=1,50
	XJ=J
	PRINT(J)=BL
	H=(XJ-1.)*SCALE
	HH=XJ*SCALE
	IF(IGRAPH(I).LE.H)GO TO 1030
	JMAX=J
	IF(IGRAPH(I).GE.HH)GO TO 1020
	FRAC=(IGRAPH(I)-H)/SCALE*10.+1.
	IF=FRAC
	PRINT(J)=F(IF)
	GO TO 1030
1020	PRINT(J)=XX
1030	CONTINUE
	WRITE(7,104)V,VV,IGRAPH(I),(PRINT(K),K=1,50)
104	FORMAT(1X,2E11.3,I8,1X,50A1)
        CALL ALINA(1)
1041	CONTINUE
300	CONTINUE
        CALL ALINF(IDUM)
	IF(N2DIM(NHIST).EQ.0)GO TO 320
	IF(IND2(2,N2DIM(NHIST)).NE.NHIST)GO TO 320
        CALL HIST2D(N2DIM(NHIST),NOPRNT)
320	CONTINUE
	RETURN
	END



	SUBROUTINE RAT2
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	COMMON/RATC/IRAT,IDS(20),NNUM(20),NDIV(20),RMULT(20),
     1  IRATSZ(20),IRATER(20),RVLLO(20),RVLHI(20)
	IF(IRAT.EQ.0)RETURN
	DO 5 J=1,IRAT
	I=J
	IF(IDS(I).EQ.'/')GO TO 2
	IF(IDS(I).EQ.'-')GO TO 3
	GO TO 5
2	CALL RAT(NNUM(I),NDIV(I),RMULT(I),
     1  IRATSZ(I),IRATER(I),RVLLO(I),RVLHI(I))
	GO TO 5
3	CALL DIF(NNUM(I),NDIV(I),RMULT(I),
     1  IRATSZ(I),IRATER(I),RVLLO(I),RVLHI(I))
	GO TO 5
5	CONTINUE
	RETURN
	END



	SUBROUTINE RAT(NHIST,NHIST2,RT,N,IERR,VLO,VHI)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	DIMENSION IGRAPH(102),F(11),DOT(5),PRINT(102),
     1  RATGRF(102),IGRAF2(102),ERBAR(2,102)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	DATA F,DOT,XX,BL/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,
     1  1H8,1H9,1H0,1H,,1H',1H+,1H*,1H.,1HX,1H /
	IF(NHIST.EQ.0.OR.NHIST2.EQ.0)RETURN
	DO 2 I=1,102
	RATGRF(I)=0.
	IGRAPH(I)=IHIST(NHIST,I)
	IGRAF2(I)=IHIST(NHIST2,I)
	DO 2 J=1,2
	ERBAR(J,I)=0.
2	CONTINUE
	LIM=102
	IF(N.EQ.2)GO TO 200
1	XLIM=LIM
	LIM2=LIM-1
	XLIM2=LIM2
	HIGH=0.0000001
	DO 8 I=1,LIM
	X=IGRAPH(I)
	Y=IGRAF2(I)
	IF(Y.LT..5)GO TO 8
	RATGRF(I)=X/Y*RT
	IF(X.LT..5)GO TO 8
	IF(IERR.EQ.0)GO TO 4	! NO ERR BAR
	IF(IERR.EQ.1)GO TO 5	! UNRELATED GAUSSIAN
	IF(IERR.EQ.2)GO TO 6	! NUM IS SUBSET OF DENOM, BINOMIAL
4	ERBAR(1,I)=RATGRF(I)
	ERBAR(2,I)=RATGRF(I)
	GO TO 7
5	ERBAR(1,I)=RATGRF(I)*(1.+(1./X+1./Y)**.5)
	ERBAR(2,I)=RATGRF(I)*(1.-(1./X+1./Y)**.5)
	GO TO 7
6	ERBAR(1,I)=(X+.5+SQRT(X-X**2/Y+.25))/(Y+1.)*RT
	ERBAR(2,I)=(X+.5-SQRT(X-X**2/Y+.25))/(Y+1.)*RT
7	IF(ERBAR(1,I).GT.HIGH)HIGH=ERBAR(1,I)
8	CONTINUE
	IF(VLO.EQ.0.AND.VHI.EQ.0.)GO TO 13
	IF(VHI.LE.VLO)GO TO 13
	XLOW=VLO
	HIGH=VHI
	VLABEL='SET '
	GO TO 15
13	XLOW=0.
	VLABEL='CALC'
15	XLOG=ALOG10(HIGH)
	IF(XLOG.LT.0.)XLOG=XLOG-1.
	LOG=XLOG
	LOG=2-LOG
	SCALE=(HIGH-XLOW)/50.
	WRITE(7,100)NHIST,(NAME(I,NHIST),I=1,6),
     1  NHIST2,(NAME(I,NHIST2),I=1,6),RT,
     1  XMIN(NHIST),XMAX(NHIST),HIGH,XLOW,VLABEL
100	FORMAT('1',I2,4X,6A4,'   NUMERATOR'/
     1         ' ',I2,4X,6A4,'   DIVISOR  ','  R*',F11.5/
     3         ' HORIZONTAL  MIN = ',F10.4,'    MAX = ',F10.4/
     4         ' VERTICAL HIGH = ',F10.4,'   LOW  = ',F10.4,
     5  3X,A4)
        CALL ALINA(4)
	DO 41 I=1,50
	XI=I
	H=HIGH-XI*SCALE
	HH=HIGH-(XI-1.)*SCALE
	HHH=HH*10.**LOG
	IH=HHH
	DO 35 J=1,LIM
	PRINT(J)=BL
	IF(RATGRF(J).LE.H)GO TO 33
	IF(RATGRF(J).GT.HH)GO TO 33
	IF(IGRAF2(J).EQ.0)GO TO 35
	PRINT(J)=DOT(4)
	GO TO 35
33	IF(IGRAPH(J).EQ.0)GO TO 35
	IF(ERBAR(1,J).LT.H)GO TO 35
	IF(ERBAR(2,J).GT.HH)GO TO 35
	PRINT(J)=DOT(5)
35	CONTINUE
36	WRITE(7,101)IH,(PRINT(K),K=1,LIM)
101	FORMAT(1X,I4,1X,102A1)
        CALL ALINA(1)
41	CONTINUE
	DO 60 I=1,102
	J=I
	DO 50 K=1,20
	IF(J.LE.10)GO TO 60
	J=J-10
50	CONTINUE
60	PRINT(I)=F(J)
	I=0
	WRITE(7,101)I,(PRINT(K),K=1,LIM)
        CALL ALINA(1)
	WRITE(7,103)
103	FORMAT(' ')
        CALL ALINA(1)
	GMAX=ABS(XMAX(NHIST))
	IF(ABS(XMIN(NHIST)).GT.GMAX)GMAX=ABS(XMIN(NHIST))
	XLOG=ALOG10(GMAX)
	LOG=XLOG
	LOG=4-LOG
	TENLOG=10.**LOG
	XLM2M1=XLIM2-1.
	SPREAD=XMAX(NHIST)-XMIN(NHIST)
	DO 70 I=1,LIM2
	XI=I
	GRAPH=ABS((XMIN(NHIST)+SPREAD*(XI-1.)/XLM2M1)*TENLOG)
70	IGRAPH(I)=GRAPH
	DO 85 I=1,4
	II=5-I
	ITEN=10**II
	DO 80 J=1,LIM2
	IGTMP=IGRAPH(J)
	IW=IGTMP/ITEN
	PRINT(J)=F(IW+1)
	IGTMP=IW*ITEN
	IGRAPH(J)=IGRAPH(J)-IGTMP
80	CONTINUE
	WRITE(7,102)(PRINT(K),K=1,LIM2)
102	FORMAT(6X,102A1)
        CALL ALINA(1)
85	CONTINUE
        CALL ALINF(IDUM)
	RETURN
200	LIM=52
	DO 210 I=2,51
	IGRAPH(I)=IGRAPH(2*I-2)+IGRAPH(2*I-1)
210	IGRAF2(I)=IGRAF2(2*I-2)+IGRAF2(2*I-1)
	IGRAPH(52)=IGRAPH(102)
	IGRAF2(52)=IGRAF2(102)
	GO TO 1
	END



	SUBROUTINE DIF(NHIST,NHIST2,RT,N,IERR,VLO,VHI)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	DIMENSION IGRAPH(102),F(11),DOT(5),PRINT(102),
     1  RATGRF(102),IGRAF2(102),ERBAR(2,102)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	DATA F,DOT,XX,BL/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,
     1  1H8,1H9,1H0,1H,,1H',1H+,1H*,1H.,1HX,1H /
	IF(NHIST.EQ.0.OR.NHIST2.EQ.0)RETURN
	DO 2 I=1,102
	RATGRF(I)=0.
	IGRAPH(I)=IHIST(NHIST,I)
	IGRAF2(I)=IHIST(NHIST2,I)
	DO 2 J=1,2
	ERBAR(J,I)=0.
2	CONTINUE
	LIM=102
	IF(N.EQ.2)GO TO 200
1	XLIM=LIM
	LIM2=LIM-1
	XLIM2=LIM2
	HIGH=0.0000001
	XLOW=9999999.
	DO 8 I=1,LIM
	X=IGRAPH(I)
	Y=IGRAF2(I)
	RATGRF(I)=X-Y*RT
	IF(IERR.EQ.0)GO TO 4	! NO ERR BAR
	IF(IERR.EQ.1)GO TO 5	! UNRELATED GAUSSIAN
	IF(IERR.EQ.2)GO TO 6	! NUM IS SUBSET OF DENOM, BINOMIAL
4	ERBAR(1,I)=RATGRF(I)
	ERBAR(2,I)=RATGRF(I)
	GO TO 7
5	ERRT=SQRT(ABS(X)+ABS(Y)*RT**2)
	ERBAR(1,I)=RATGRF(I)+ERRT
	ERBAR(2,I)=RATGRF(I)-ERRT
	GO TO 7
6	ERRT=SQRT(ABS(RATGRF(I)))
	ERBAR(1,I)=RATGRF(I)+ERRT
	ERBAR(2,I)=RATGRF(I)-ERRT
7	IF(ERBAR(1,I).GT.HIGH)HIGH=ERBAR(1,I)
	IF(ERBAR(2,I).LT.XLOW)XLOW=ERBAR(2,I)
8	CONTINUE
	IF(VLO.EQ.0.AND.VHI.EQ.0.)GO TO 13
	IF(VHI.LE.VLO)GO TO 13
	XLOW=VLO
	HIGH=VHI
	VLABEL='SET '
	GO TO 15
13	VLABEL='CALC'
15	XLOG=ALOG10(ABS(HIGH))
	IF(XLOG.LT.0.)XLOG=XLOG-1.
	LOG=XLOG
	LOG=2-LOG
	SCALE=(HIGH-XLOW)/50.
	WRITE(7,100)NHIST,(NAME(I,NHIST),I=1,6),
     1  NHIST2,(NAME(I,NHIST2),I=1,6),RT,
     1  XMIN(NHIST),XMAX(NHIST),HIGH,XLOW,VLABEL
100	FORMAT('1',I2,4X,6A4,'   ADDERATOR'/
     1         ' ',I2,4X,6A4,'   SUBTERATOR  ','*',F11.5/
     3         ' HORIZONTAL  MIN = ',F10.4,'    MAX = ',F10.4/
     4         ' VERTICAL HIGH = ',F10.4,'   LOW  = ',F10.4,
     5  3X,A4)
        CALL ALINA(4)
	DO 41 I=1,50
	XI=I
	H=HIGH-XI*SCALE
	HH=HIGH-(XI-1.)*SCALE
	HHH=ABS(HH)*10.**LOG
	IH=HHH
	DO 35 J=1,LIM
	PRINT(J)=BL
	IF(RATGRF(J).LE.H)GO TO 33
	IF(RATGRF(J).GT.HH)GO TO 33
	IF(IGRAF2(J).EQ.0)GO TO 35
	PRINT(J)=DOT(4)
	GO TO 35
33	IF(IGRAPH(J).EQ.0)GO TO 35
	IF(ERBAR(1,J).LT.H)GO TO 35
	IF(ERBAR(2,J).GT.HH)GO TO 35
	PRINT(J)=DOT(5)
35	CONTINUE
36	WRITE(7,101)IH,(PRINT(K),K=1,LIM)
101	FORMAT(1X,I4,1X,102A1)
        CALL ALINA(1)
41	CONTINUE
	DO 60 I=1,102
	J=I
	DO 50 K=1,20
	IF(J.LE.10)GO TO 60
	J=J-10
50	CONTINUE
60	PRINT(I)=F(J)
	I=0
	WRITE(7,101)I,(PRINT(K),K=1,LIM)
        CALL ALINA(1)
	WRITE(7,103)
103	FORMAT(' ')
        CALL ALINA(1)
	GMAX=ABS(XMAX(NHIST))
	IF(ABS(XMIN(NHIST)).GT.GMAX)GMAX=ABS(XMIN(NHIST))
	XLOG=ALOG10(GMAX)
	LOG=XLOG
	LOG=4-LOG
	TENLOG=10.**LOG
	XLM2M1=XLIM2-1.
	SPREAD=XMAX(NHIST)-XMIN(NHIST)
	DO 70 I=1,LIM2
	XI=I
	GRAPH=ABS((XMIN(NHIST)+SPREAD*(XI-1.)/XLM2M1)*TENLOG)
70	IGRAPH(I)=GRAPH
	DO 85 I=1,4
	II=5-I
	ITEN=10**II
	DO 80 J=1,LIM2
	IGTMP=IGRAPH(J)
	IW=IGTMP/ITEN
	PRINT(J)=F(IW+1)
	IGTMP=IW*ITEN
	IGRAPH(J)=IGRAPH(J)-IGTMP
80	CONTINUE
	WRITE(7,102)(PRINT(K),K=1,LIM2)
102	FORMAT(6X,102A1)
        CALL ALINA(1)
85	CONTINUE
        CALL ALINF(IDUM)
	RETURN
200	LIM=52
	DO 210 I=2,51
	IGRAPH(I)=IGRAPH(2*I-2)+IGRAPH(2*I-1)
210	IGRAF2(I)=IGRAF2(2*I-2)+IGRAF2(2*I-1)
	IGRAPH(52)=IGRAPH(102)
	IGRAF2(52)=IGRAF2(102)
	GO TO 1
	END



	SUBROUTINE HIST2D(N2D,NOPRNT)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	COMMON/HIST3/IHST2D(11,13,52)
	COMMON/H2FIT/ XPARAM(11,5) ! GRAPH #, PARAM #
	DIMENSION PARAM(5)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
	DIMENSION IAVEI1(52),I1STRT(52),I1STOP(52)
	DIMENSION F(16),PRNT(2,52,2),HORZ(6)
	DIMENSION NNCUT(2)
	COMMON/H2DXX/IPASS
C	DIMENSION MASK(4),NMASK(4)
C	DATA MASK /"000000000377,
C     2             "000000177400,
C     3             "000077600000,
C     4             "037700000000/
C	DATA NMASK/"037777777400,
C     2             "037777600377,
C     3             "037700177777,
C     4             "000077777777/
	DATA F/'0','1','2','3','4','5','6','7','8','9',
     1  ' ','X','-','+','I','|'/


	I1=IND2(1,N2D)
	NNCUT(1)=0
	IF(NCUTG(I1).NE.0)NNCUT(1)=NUCUT(NCUTG(I1))
	J1=IND2(2,N2D)
	NNCUT(2)=0
	IF(NCUTG(J1).NE.0)NNCUT(2)=NUCUT(NCUTG(J1))
	JOVFLO=0
	IF((N2D+1).GT.11)GO TO 2
	IF(IND2(1,(N2D+1)).NE.0)GO TO 2
	JOVFLO=N2D+1

2	IF(NOPRNT.EQ.1)GO TO 7
	WRITE(7,100) N2D,
     1  I1,NCFIX(I1),(NAME(I,I1),I=1,6),NNCUT(1),
     2  J1,NCFIX(J1),(NAME(I,J1),I=1,6),NNCUT(2),JOVFLO
100	FORMAT('1  TWO DIMENSIONAL HISTOGRAM (SEQ#',I1,') OF'/
     1  I12,'   (',I3,') ',6A4,'  CUT ',I3,'  PLOTTED DOWN PAGE'/
     2  I12,'   (',I3,') ',6A4,'  CUT ',I3,'  PLOTTED ACROSS PAGE',
     3  '  OVERFLOW CHANNEL ',I1)
        CALL ALINA(3)
7	CONTINUE

	DO 9 I=1,5
9	PARAM(I)=XPARAM(N2D,I)
	DET=PARAM(1)*PARAM(3)-PARAM(2)**2
	CON=0.
	XIN=0.
	IF(DET.EQ.0.)GO TO 11
	CON=(PARAM(3)*PARAM(4)-PARAM(2)*PARAM(5))/DET
	XIN=(PARAM(1)*PARAM(5)-PARAM(2)*PARAM(4))/DET
11	IF(NOPRNT.EQ.1)GO TO 79
C
C
	DO 17 J=1,52
	ISUM0=0
	ISUM1=0
	ISUM2=0
	DO 15 I=1,52
	I2=(I+3)/4

C USE CERNLIB EQUIVALENT
C IR IS THE BYTE NUMBER IN WORD I2
C        IR=I-4*(I2-1)
C        IPRNT=IHST2D(N2D,I2,J).AND.MASK(IR)
C        IF(IR.NE.1)IPRNT=IPRNT/256**(IR-1)
C IR IS THE BIT NUMBER IN WORD I2
	IR=(I-4*(I2-1)-1)*8+1
        IPRNT=JBYT(IHST2D(N2D,I2,J),IR,8)
C
  	IF(JOVFLO.EQ.0)GO TO 13

C USE CERNLIB EQUIVALENT
C        IPRNT2=IHST2D(JOVFLO,I2,J).AND.MASK(IR)
C        IF(IR.NE.1)IPRNT2=IPRNT2/256**(IR-1)
        IPRNT2=JBYT(IHST2D(JOVFLO,I2,J),IR,8)

	IF(IPRNT2.NE.0)IPRNT=IPRNT+IPRNT2*256
13	IF(IPRNT.EQ.0)GO TO 15
	IF(I.EQ.1)GO TO 15
	IF(I.EQ.52)GO TO 15
	ISUM0=ISUM0+IPRNT
	ISUM1=ISUM1+IPRNT*I
	ISUM2=ISUM2+IPRNT*I**2
15	CONTINUE
	IAVEI1(J)=0
	IF(ISUM0.LE.5)GO TO 17
	AVE1=1.*ISUM1/ISUM0
	AVE2=1.*ISUM2/ISUM0
	SIG =AVE2-AVE1**2
	IF(SIG.LT.0.)SIG=0.
	SIG=SQRT(SIG)
	ERR=SIG/SQRT(1.*ISUM0)
	IF(IPASS.EQ.3)ERR=SIG
	IAVEI1(J)=AVE1+.5
	I1STRT(J)=AVE1-ERR+.5
	I1STOP(J)=AVE1+ERR+.5
17	CONTINUE

	DO 21 I=1,2
	DO 21 J=1,52
21	PRNT(I,J,1)=F(13)
	DO 22 I=0,5
	PRNT(2,I*10+1,1)=F(14)
22	PRNT(1,I*10+2,1)=F(14)
	WRITE(7,101),((PRNT(I,J,1),I=1,2),J=1,52)
101	FORMAT(23X,2X,104A1)
        CALL ALINA(1)
	DO 50 I=1,52
	XI=I
	V=VV
	VV=XMIN(I1)+(XI-1.)/50.*(XMAX(I1)-XMIN(I1))
	I2=(I+3)/4

C USE CERNLIB EQUIVALENT
C IR IS THE BYTE NUMBER IN WORD I2
C        IR=I-4*(I2-1)
C IR IS THE BIT NUMBER IN WORD I2
	IR=(I-4*(I2-1)-1)*8+1

	DO 23 J=1,52
	DO 23 K=1,2
	DO 23 L=1,2
23	PRNT(K,J,L)=F(11)
	PRNT(2,1,1)=F(15)
	PRNT(1,52,1)=F(15)
	DO 30 J=1,52

C USE CERNLIB EQUIVALENT
C        IPRNT=IHST2D(N2D,I2,J).AND.MASK(IR)
C        IF(IR.NE.1)IPRNT=IPRNT/256**(IR-1)
C        IPRNT=IPRNT.AND.MASK(1)
        IPRNT=JBYT(IHST2D(N2D,I2,J),IR,8)

	IF(JOVFLO.EQ.0)GO TO 25

C USE CERNLIB EQUIVALENT
C        IPRNT2=IHST2D(JOVFLO,I2,J).AND.MASK(IR)
C        IF(IR.NE.1)IPRNT2=IPRNT2/256**(IR-1)
C        IPRNT2=IPRNT2.AND.MASK(1)
        IPRNT2=JBYT(IHST2D(JOVFLO,I2,J),IR,8)

	IF(IPRNT2.NE.0)IPRNT=IPRNT+IPRNT2*256
25	IF(IPASS.LE.1)GO TO 27

C IPASS=2, POINTS WITH ERROR BARS, INDICATING ERROR=RMS/SQRT(N)
C IPASS=3, POINTS WITH ERROR BARS, INDICATING RMS
	IF((I.GE.I1STRT(J)).AND.(I.LE.I1STOP(J)))PRNT(2,J,1)=F(16)
	IF(I.EQ.IAVEI1(J))PRNT(2,J,1)=F(12)
	GO TO 30

C REGULAR SCATTER OUTPUT, IPASS=0 OR 1
27	IF(IPRNT.EQ.0)GO TO 30

	IF(IPRNT.GT.99)GO TO 28
	IDEV10=IPRNT/10
	IONES=IPRNT-IDEV10*10
	IF(IDEV10.NE.0)PRNT(1,J,1)=F(IDEV10+1)
	               PRNT(2,J,1)=F(IONES +1)
	GO TO 29
28	PRNT(1,J,1)=F(12)
	PRNT(2,J,1)=F(12)

29	CONTINUE
30	CONTINUE
	IF(I.GT.1.AND.I.LT.52)GO TO 45
	WRITE(7,101) ((PRNT(J,K,1),J=1,2),K=1,52)
        CALL ALINA(1)
	WRITE(7,121) ((PRNT(J,K,2),J=1,2),K=1,52)
        CALL ALINA(1)
	GO TO 46
45	WRITE(7,102) V,VV,((PRNT(J,K,1),J=1,2),K=1,52)
        CALL ALINA(1)
C	WRITE(7,122) V,VV,((PRNT(J,K,2),J=1,2),K=1,52)! SEEMS TO WORK ON PDP10
46	CONTINUE
121	FORMAT('+',22X,2X,104A1)
102	FORMAT(1X,2E11.3,2X,104A1)
122	FORMAT('+',2E11.3,2X,104A1)
50	CONTINUE
	DO 63 I=1,2
	DO 63 J=1,52
63	PRNT(I,J,1)=F(13)
	DO 64 I=0,5
	PRNT(2,I*10+1,1)=F(14)
64	PRNT(1,I*10+2,1)=F(14)
	WRITE(7,101),((PRNT(I,J,1),I=1,2),J=1,52)
        CALL ALINA(1)
	DO 75 I=1,6
	XI=I
	XI=(XI-1.)/5.
75	HORZ(I)=XMIN(J1)+XI*(XMAX(J1)-XMIN(J1))
	WRITE(7,104)HORZ
104	FORMAT(13X,6(9X,E11.3))
        CALL ALINA(1)
C	FIT PART
79	CON50=(CON-.5)/2.+XIN/4.

C FITTING IS DONE AS X VS Y  FOR THE VALUES SCALED  X=(XVAL-XMIN)/(XDIF)*100+2
C:YBIN FOR Y=0 IS:-YMIN/(YMAX-YMIN)*100+2
C:XBIN FOR YBIN IS:CON+XIN*YBIN
C:XBIN FOR Y=0 IS:CON-XIN*(YMIN/(YMAX-YMIN)*100+2)
C:X FOR XBIN IS:XMIN+(XMAX-XMIN)*(XBIN-2)/100
C THEN...
	CONVAL=XMIN(I1)  +  (XMAX(I1)-XMIN(I1))*
     1  ((CON-2.-2.*XIN)/100.-XIN*XMIN(J1)/(XMAX(J1)-XMIN(J1)) )
	XINVAL=XIN*(XMAX(I1)-XMIN(I1))/(XMAX(J1)-XMIN(J1))
89	WRITE(7,115)N2D,CON50,XIN,CONVAL,XINVAL
115	FORMAT(/I3,'...',
     1  ' FIRST IN TERMS OF SECOND, CONST=',F9.4,'  CORR=',F12.7,
     2  '....',
     3  '  REAL VALUES-> "DOWN"=',E11.3,' + ',E11.3,' * "ACROSS"')
        CALL ALINA(2)
	IF(NOPRNT.EQ.1)GO TO 129
        CALL ALINF(IDUM)
129     RETURN
	END



	SUBROUTINE KEEP
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        COMMON/HSWTCH/IHISTI,IXEQMK
	COMMON/CUTS/JCUT(97,10),NCPASS(0:97),NCUT,
     1  CUTL(97,10),CUTH(97,10),ICUT(97),COMCUT(6,97,10)
	COMMON/SCALR/ISCAL(80)
	COMMON/RATC/IRAT,IDS(20),NNUM(20),NDIV(20),RMULT(20),
     1  IRATSZ(20),IRATER(20),RVLLO(20),RVLHI(20)
	COMMON/HIST3/IHST2D(11,13,52)
	COMMON/H2FIT/ XPARAM(11,5) ! GRAPH #, PARAM #
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)

	IF(IXEQMK.NE.0)GO TO 7
	TYPE 1001
 1001	FORMAT(' HSUB: KEEP: do not execute KEEP; MAKE not called')
	GO TO 11

 7	OPEN(UNIT=21,FILE='SCLKEP.DAT',STATUS='OLD')
	WRITE(21,1002)(I,ISCAL(I),I=1,80)
 1002	FORMAT(20(4(I3,':',I13)/))
	CLOSE(UNIT=21)

	OPEN(UNIT=20,FILE='GKEEP.DAT',FORM='UNFORMATTED',STATUS='OLD')
	WRITE(20)IHIST,SUMX1,SUMX2
	WRITE(20)NCFIX,N2DIM,IND2,NCUTG
	WRITE(20)XMIN,XMAX,NAME
	WRITE(20)JCUT,CUTL,CUTH,ICUT,NUCUT,NCPASS,NCUT,COMCUT
	WRITE(20)IHST2D
	WRITE(20)XPARAM
	WRITE(20),IRAT,IDS,NNUM,NDIV,RMULT,IRATSZ,IRATER,
     1  RVLLO,RVLHI
	CLOSE(UNIT=20)

 11	TYPE 1003
 1003	FORMAT(' HSUB: KEEP: stalling in KEEP')
        XSTALL=0.
	DO 15 ISTALL=1,10000
 15	XSTALL=XSTALL+1.

	RETURN
	END




	SUBROUTINE RESTRH
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        COMMON/HSWTCH/IHISTI,IXEQMK
	COMMON/CUTS/JCUT(97,10),NCPASS(0:97),NCUT,
     1  CUTL(97,10),CUTH(97,10),ICUT(97),COMCUT(6,97,10)
	COMMON/SCALR/ISCAL(80)
	COMMON/RATC/IRAT,IDS(20),NNUM(20),NDIV(20),RMULT(20),
     1  IRATSZ(20),IRATER(20),RVLLO(20),RVLHI(20)
	COMMON/HIST3/IHST2D(11,13,52)
	COMMON/H2FIT/ XPARAM(11,5) ! GRAPH #, PARAM #
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	CHARACTER*50 GKFL,SCLFL,NAMFL
	CHARACTER*9 GKDEF
        CHARACTER*10 SCLDEF
	DATA GKDEF /'GKEEP.DAT'/
	DATA SCLDEF/'SCLKEP.DAT'/
	DATA IOPEN/0/
	IOPEN=1
        LGK=9
        GKFL(1:LGK)=GKDEF(1:LGK)
        LSC=10
        SCLFL(1:LSC)=SCLDEF(1:LSC)
	GO TO 40
	ENTRY RENTRH
	IF(IOPEN.EQ.0)GO TO 10
 5      TYPE 1001,SCLFL(1:LSC)
        TYPE 1002,GKFL(1:LGK)
        TYPE 1003
 1001   FORMAT(' SCALE FILE IS..',A50)
 1002   FORMAT(' KEEP  FILE IS..',A50)
 1003   FORMAT('     TYPE "K"EEP OR "N"EW   OR "B"YPASS RESTOR')
	ACCEPT 1005,GO
 1005   FORMAT(A1)
	IF(GO.EQ.'B')RETURN
	IF(GO.EQ.'K')GO TO 40
	IF(GO.EQ.'N')GO TO 10
	GO TO 5
 10     CONTINUE
 11     TYPE 1011
 1011   FORMAT(' ENTER SCALER FILE NAME (WITHOUT EXTENSION), A50')
	ACCEPT 1012,NAMFL
 1012   FORMAT(A)
        LNAM=LENOCC(NAMFL)
        IF(LNAM.LE.46)GO TO 12
        TYPE 1013,LNAM
 1013   FORMAT(' SCALE FILE NAME TOO LONG=',I10)
        GO TO 11
 12     LSC=LNAM+4
        SCLFL(1:LSC)=NAMFL(1:LNAM)//'.DAT'
	TYPE 1014,SCLFL(1:LSC)
 1014   FORMAT(' OPENING ',A50)
 13     TYPE 1015
 1015   FORMAT(' ENTER KEEP FILE NAME (WITHOUT EXTENSION), A50')
	ACCEPT 1012,NAMFL
        LNAM=LENOCC(NAMFL)
        IF(LNAM.LE.46)GO TO 14
        TYPE 1016,LNAM
 1016   FORMAT(' KEEP  FILE NAME TOO LONG=',I3)
        GO TO 13
 14     LGK=LNAM+4
        GKFL(1:LGK)=NAMFL(1:LNAM)//'.DAT'
	TYPE 1014,GKFL(1:LGK)
	IOPEN=1
40	CONTINUE
	OPEN(UNIT=21,FILE=SCLFL(1:LSC),STATUS='OLD')
	OPEN(UNIT=20,FILE=GKFL(1:LGK),FORM='UNFORMATTED',STATUS='OLD')
50	READ(21,100,ERR=27,END=27)(ISCAL(I),I=1,80)
100	FORMAT(20(4(4X,I13)/))
	READ(20,END=26,ERR=26)IHIST,SUMX1,SUMX2
	READ(20,END=26,ERR=26)NCFIX,N2DIM,IND2,NCUTG
	READ(20,END=26,ERR=26)XMIN,XMAX,NAME
	READ(20,END=26,ERR=26)
     1  JCUT,CUTL,CUTH,ICUT,NUCUT,NCPASS,NCUT,COMCUT
	READ(20,END=26,ERR=26)IHST2D
	READ(20,END=26,ERR=26)XPARAM
	READ(20,END=26,ERR=26),IRAT,IDS,NNUM,NDIV,RMULT,IRATSZ,IRATER,
     1  RVLLO,RVLHI

60	CLOSE(UNIT=20)
	CLOSE(UNIT=21)
	CALL CFXNUL
        IHISTI=1
	RETURN
26	TYPE 102
102	FORMAT('????  OUT OF BOUND IN RESTRH, GK FILE')
	GO TO 75
27	TYPE 112
112	FORMAT('????  OUT OF BOUND IN RESTRH, SCL FILE')
75	CONTINUE
	GO TO 60
	END



	SUBROUTINE MAKE
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        COMMON/HSWTCH/IHISTI,IXEQMK
        IF(IHISTI.EQ.0)GO TO 99
	CALL MAKEW(1)
99      RETURN
	END

	SUBROUTINE MAKEW(INC)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
        COMMON/HSWTCH/IHISTI,IXEQMK
	COMMON/FIXER/CFIX(250)
	COMMON/CUTS/JCUT(97,10),NCPASS(0:97),NCUT,
     1  CUTL(97,10),CUTH(97,10),ICUT(97),COMCUT(6,97,10)
	COMMON/HIST2/NCFIX(147),N2DIM(147),IND2(2,11),NCUTG(147),
     1  NUCUT(97),XMIN(147),XMAX(147),NAME(6,147)
        REAL*8 SUMX1,SUMX2
	COMMON/HIST1/SUMX1(147),SUMX2(147),IHIST(147,102)
	DIMENSION CUTV(97),N2DON(11),XXSAVE(11)
        IF(IHISTI.EQ.0)GO TO 99
	NCPASS(0)=NCPASS(0)+INC
	DO 15 I=1,NCUT
	CUTV(I)=32.
	DO 11 J=1,ICUT(I)
	IF(JCUT(I,J).GT.250)GO TO 5
	VAL=CFIX(JCUT(I,J))
	GO TO 7
5	VAL=CUTV(JCUT(I,J)-250)
7	CONTINUE
	IF(VAL.LT.CUTH(I,J).AND.VAL.GE.CUTL(I,J))GO TO 11
	CUTV(I)=-32.
	GO TO 15
11	CONTINUE
	NCPASS(I)=NCPASS(I)+INC
15	CONTINUE
	DO 17 I=1,11
17	N2DON(I)=0
	DO 25 I=1,147
	IF(NCFIX(I).EQ.0)GO TO 27
	IF(NCUTG(I).EQ.0)GO TO 21
19	IF(CUTV(NCUTG(I)).LT.0.)GO TO 25
21	V=CFIX(NCFIX(I))
	IF(V.LT.-1.E+9)GO TO 25
	XI=(V-XMIN(I))/(XMAX(I)-XMIN(I))*100.+2.
	IF(XI.GT.1.E8)XI=1.E8
	IX=XI
	IF(IX.GT.101.OR.IX.LT.2)GO TO 23
	SUMX1(I)=SUMX1(I)+V*INC
	SUMX2(I)=SUMX2(I)+V**2*INC
23	CONTINUE
	IF(IX.GT.102)IX=102
	IF(IX.LT.1)IX=1
	IHIST(I,IX)=IHIST(I,IX)+INC
        IF(N2DIM(I).EQ.0)GO TO 25
	IF(N2DIM(I).GT.11.OR.N2DIM(I).LT.0)GO TO 25
	IF(N2DON(N2DIM(I)).EQ.2)GO TO 25
	IF(N2DON(N2DIM(I)).EQ.1) GO TO 24
	N2DON(N2DIM(I))=1
	XXSAVE(N2DIM(I))=XI
	GO TO 25
24	N2DON(N2DIM(I))=2
	CALL MAKE2(INC,N2DIM(I),XXSAVE(N2DIM(I)),XI)
25	CONTINUE
27	CONTINUE
	IXEQMK=IXEQMK+1
	ENTRY CFXNUL
	DO 31 I=1,250
31	CFIX(I)=-1.E+11
99      RETURN
	END



	SUBROUTINE MAKE2(INC,N,XI,YI)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        SAVE
	COMMON/HIST3/IHST2D(11,13,52)
	COMMON/H2FIT/ XPARAM(11,5) ! GRAPH #, PARAM #
	COMMON/HIST2/NG(147),N2DIM(147),IND2(2,11),NC(147),
     1  NUCUT(97),GL(147),GH(147),COMGR(6,147)
C	DIMENSION MASK(4),NMASK(4)
C	DATA MASK /"000000000377,
C     2             "000000177400,
C     3             "000077600000,
C     4             "037700000000/
C	DATA NMASK/"037777777400,
C     2             "037777600377,
C     3             "037700177777,
C     4             "000077777777/
	NTEMP=N
	IX=XI
	IY=YI
	IFIT=1
10	IF(IX.GT.1)GO TO 11
	IX=1
	IFIT=0
	GO TO 12
11	IF(IX.LT.102)GO TO 12
	IX=102
	IFIT=0
12	IF(IY.GT.1)GO TO 13
	IY=1
	IFIT=0
	GO TO 35
13	IF(IY.LT.102)GO TO 14
	IY=102
	IFIT=0
	GO TO 35
14	IF(IFIT.EQ.0)GO TO 35

C	FIT
	XINC=INC
	XPARAM(NTEMP,1)=XPARAM(NTEMP,1)+XINC
	XPARAM(NTEMP,2)=XPARAM(NTEMP,2)+XINC*YI
	XPARAM(NTEMP,3)=XPARAM(NTEMP,3)+XINC*YI**2
	XPARAM(NTEMP,4)=XPARAM(NTEMP,4)+XINC*XI
	XPARAM(NTEMP,5)=XPARAM(NTEMP,5)+XINC*XI*YI

35	IX1=IX+2
	IX2=IX1/2
	IY1=IY+2
	IY2=IY1/2
	IX3=(IX2+3)/4
	IY3=IY2

C USE CERNLIB EQUIVALENT
C IXR IS THE BYTE NUMBER IN WORD IX3
C        IXR=IX2-4*(IX3-1)
C IXR IS THE BIT NUMBER IN WORD IX3
	IXR=(IX2-4*(IX3-1)-1)*8+1

37	ITEMP=IHST2D(NTEMP,IX3,IY3)

C USE CERNLIB EQUIVALENT
C        ITEMP1=IBITS(ITEMP,(IXR-1)*8,8)
C        ITEMP2=ITEMP.AND.NMASK(IXR)
        ITEMP1=JBYT(ITEMP,IXR,8)

	ITEMP1=ITEMP1+INC
	IF(ITEMP1.GT.255)GO TO 41

C NO OVERFLOW; PUT BACK IN MEMORY
39      CONTINUE

C USE CERNLIB EQUIVALENT
C        CALL MVBITS(ITEMP1,0,8,ITEMP,(IXR-1)*8)
        CALL SBYT(ITEMP1,ITEMP,IXR,8)

	IHST2D(NTEMP,IX3,IY3)=ITEMP
	RETURN
   
C OVERFLOW; TEST IF OVERFLOW LOCATION IS AVAILABLE
41      NTST=NTEMP+1            ! OVERFLOW INTO ANOTHER FIELD
	IF(NTST.GT.11)GO TO 43
	IF(IND2(1,NTST).NE.0)GO TO 43
        GO TO 45

C OVERFLOW, BUT NO LOCATION; SATURATE AND FINISH
43      ITEMP1=255
        GO TO 39

C OVERFLOW; LOCATION IS AVAILABLE
45      CONTINUE

C USE CERNLIB EQUIVALENT
C        IHST2D(NTEMP,IX3,IY3)=ITEMP2
        CALL SBYT(0,IHST2D(NTEMP,IX3,IY3),IXR,8)
	NTEMP=NTST
	GO TO 37
	END



        SUBROUTINE ALIN(INPUT)
	IMPLICIT REAL (A-H,O-Z)
	IMPLICIT INTEGER(I-N)
        INTEGER LINCNT,LINMAX,PAGE
        TYPE 1001,LINCNT,LINMAX,PAGE
1001    FORMAT(' PAGE ALIGNMENT: LINE COUNT=',I3,' MAX=',I3,
     1                         '  PAGE',I5)
        RETURN


        ENTRY ALIN0(INPUT)
        LINCNT=0
        LINMAX=66
        PAGE=1
        RETURN


        ENTRY ALINA(INPUT)
        LINCNT=LINCNT+INPUT
31      IF(LINCNT.LE.LINMAX)GO TO 33
        LINCNT=LINCNT-LINMAX
        PAGE=PAGE+1
        GO TO 31
33      CONTINUE
        RETURN


        ENTRY ALINF(INPUT)
41      IF(LINCNT.EQ.LINMAX)GO TO 49
        IF(LINCNT.LT.LINMAX)GO TO 43
        LINCNT=LINCNT-LINMAX
        PAGE=PAGE+1
        TYPE 4001
4001    FORMAT(' PAGE ALIGNMENT FILLER: ADD PAGE ADVANCE')
43      NEED=LINMAX-LINCNT
        DO 45 I=1,NEED
        WRITE(7,4002)
4002    FORMAT(' ')
        LINCNT=LINCNT+1
45      CONTINUE
49      PAGE=PAGE+1
        LINCNT=0
        RETURN
        END



















