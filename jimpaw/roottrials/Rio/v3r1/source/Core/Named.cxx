// this :
#include <Rio/Core/Named.h>

// Rio :
#include <Rio/Interfaces/IClass.h>
#include <Rio/Interfaces/IPrinter.h>
#include <Rio/Interfaces/IBuffer.h>

RIO_META_SOURCE(Rio::Named)

//////////////////////////////////////////////////////////////////////////////
Rio::Named::Named(
 const std::string& aName
,const std::string& aTitle
)
:fName(aName)
,fTitle(aTitle)
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
}
//////////////////////////////////////////////////////////////////////////////
Rio::Named::~Named(
)
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
}
//////////////////////////////////////////////////////////////////////////////
const std::string& Rio::Named::name(
) const
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  return fName;
}
//////////////////////////////////////////////////////////////////////////////
const std::string& Rio::Named::title(
) const
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  return fTitle;
}
//////////////////////////////////////////////////////////////////////////////
void* Rio::Named::cast(
 const IClass& aClass
) const
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  if(&aClass==sClass) return (Named*)this;
  else return Object::cast(aClass);
}
//////////////////////////////////////////////////////////////////////////////
void Rio::Named::stream(
 IBuffer& aBuffer
)
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  //FIXME if (IsA()->CanIgnoreTObjectStreamer()) return;
  if (aBuffer.isReading()) {

    unsigned int s, c;
    aBuffer.readVersion(&s, &c);
    Object::stream(aBuffer);
    aBuffer.read(fName);
    aBuffer.read(fTitle);
    aBuffer.checkByteCount(s, c,sClass->name());

  } else {

    unsigned int c = aBuffer.writeVersion(sClass->version(),true);
    Object::stream(aBuffer);
    aBuffer.write(fName);
    aBuffer.write(fTitle);
    aBuffer.setByteCount(c,true);

  }
}
//////////////////////////////////////////////////////////////////////////////
void Rio::Named::setName(
 const std::string& aName
)
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  fName = aName;
}
//////////////////////////////////////////////////////////////////////////////
void Rio::Named::setTitle(
 const std::string& aTitle
)
//////////////////////////////////////////////////////////////////////////////
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//
{
  fTitle = aTitle;
}
